{
  "name": "@kafka-microservices/source",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "// === Infrastructure ===": "",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v --remove-orphans",
    "// === Individual Services (Hot Reload) ===": "",
    "dev:gateway": "nx serve order-gateway --configuration=development",
    "dev:order": "nx serve order-service --configuration=development",
    "dev:notification": "nx serve notification-service --configuration=development",
    "dev:logger": "nx serve logger-service --configuration=development",
    "dev:upload": "nx serve upload-service --configuration=development",
    "// === Build Services ===": "",
    "build:gateway": "nx build order-gateway",
    "build:order": "nx build order-service",
    "build:notification": "nx build notification-service",
    "build:logger": "nx build logger-service",
    "build:all": "nx run-many --target=build --projects=order-gateway,order-service,notification-service,logger-service",
    "// === Production Start ===": "",
    "start:gateway": "node dist/apps/order-gateway/main.js",
    "start:order": "node dist/apps/order-service/main.js",
    "start:notification": "node dist/apps/notification-service/main.js",
    "start:logger": "node dist/apps/logger-service/main.js",
    "// === Development - All Services ===": "",
    "dev:all": "concurrently \"npm run dev:gateway\" \"npm run dev:order\" \"npm run dev:notification\" \"npm run dev:logger\"",
    "dev:microservices": "concurrently \"npm run dev:order\" \"npm run dev:notification\" \"npm run dev:logger\"",
    "// === Complete Development Setup ===": "",
    "dev:full": "concurrently \"npm run docker:up\" \"sleep 10 && npm run dev:all\"",
    "dev:infrastructure": "npm run docker:up && echo 'Waiting for services to start...' && sleep 15",
    "// === Testing ===": "",
    "test": "nx test",
    "test:gateway": "nx test order-gateway",
    "test:order": "nx test order-service",
    "test:notification": "nx test notification-service",
    "test:logger": "nx test logger-service",
    "test:all": "nx run-many --target=test --projects=order-gateway,order-service,notification-service,logger-service",
    "// === Linting ===": "",
    "lint": "nx lint",
    "lint:all": "nx run-many --target=lint --projects=order-gateway,order-service,notification-service,logger-service",
    "// === Utilities ===": "",
    "clean": "nx reset",
    "format": "nx format:write",
    "format:check": "nx format:check",
    "// === Quick Start Commands ===": "",
    "setup": "npm run docker:up && echo 'Infrastructure started! Wait 15 seconds then run: npm run dev:all'",
    "quick-start": "npm run setup && sleep 15 && npm run dev:all",
    "signoz:up": "bash start-signoz.sh",
    "signoz:down": "docker-compose -f docker-compose.signoz.yml down && docker-compose -f docker-compose.yml down && docker network rm kafka-network 2>/dev/null || true",
    "signoz:logs": "docker-compose -f docker-compose.signoz.yml logs -f",
    "dev:with-signoz": "npm run signoz:up && sleep 15 && npm run dev:all",
    "dev:signoz-only": "docker-compose -f docker-compose.signoz.yml up -d",
    "test:signoz": "node scripts/test-signoz-integration.js",
    "test:traces": "node scripts/generate-test-traces.js"
  },
  "private": true,
  "dependencies": {
    "@nestjs/axios": "^4.0.0",
    "@nestjs/common": "^11.0.0",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.0",
    "@nestjs/microservices": "^11.1.3",
    "@nestjs/mongoose": "^11.0.3",
    "@nestjs/platform-express": "^11.0.0",
    "@nestjs/typeorm": "^11.0.0",
    "@opentelemetry/api": "^1.6.0",
    "@opentelemetry/auto-instrumentations-node": "^0.48.0",
    "@opentelemetry/exporter-metrics-otlp-http": "^0.52.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.52.0",
    "@opentelemetry/instrumentation-pino": "^0.41.0",
    "@opentelemetry/sdk-node": "^0.54.0",
    "@opentelemetry/semantic-conventions": "^1.26.0",
    "aws-sdk": "^2.1692.0",
    "axios": "^1.10.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "kafkajs": "^2.2.4",
    "mongoose": "^8.16.0",
    "nestjs-pino": "^4.1.0",
    "pg": "^8.16.2",
    "pino": "^9.4.0",
    "pino-http": "^10.3.0",
    "pino-opentelemetry-transport": "^1.0.1",
    "pino-pretty": "^11.3.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.0",
    "typeorm": "^0.3.25",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.8.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.0",
    "@nx/eslint": "21.2.1",
    "@nx/eslint-plugin": "21.2.1",
    "@nx/jest": "21.2.1",
    "@nx/js": "21.2.1",
    "@nx/nest": "^21.2.1",
    "@nx/node": "21.2.1",
    "@nx/web": "21.2.1",
    "@nx/webpack": "21.2.1",
    "@nx/workspace": "21.2.1",
    "@swc-node/register": "~1.9.1",
    "@swc/core": "~1.5.7",
    "@swc/helpers": "~0.5.11",
    "@swc/jest": "~0.2.36",
    "@types/aws-sdk": "^2.7.4",
    "@types/express": "^5.0.3",
    "@types/jest": "^29.5.12",
    "@types/multer": "^1.4.13",
    "@types/node": "~18.16.9",
    "@types/pg": "^8.15.4",
    "concurrently": "^9.1.2",
    "eslint": "^9.8.0",
    "eslint-config-prettier": "^10.0.0",
    "jest": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "nx": "21.2.1",
    "prettier": "^2.6.2",
    "ts-jest": "^29.1.0",
    "ts-node": "10.9.1",
    "tslib": "^2.3.0",
    "typescript": "~5.8.2",
    "typescript-eslint": "^8.29.0",
    "verdaccio": "^6.0.5",
    "webpack-cli": "^5.1.4"
  },
  "workspaces": [
    "apps/*",
    "order-gateway",
    "order-gateway-e2e",
    "libs/*"
  ],
  "nx": {
    "includedScripts": [],
    "targets": {
      "local-registry": {
        "executor": "@nx/js:verdaccio",
        "options": {
          "port": 4873,
          "config": ".verdaccio/config.yml",
          "storage": "tmp/local-registry/storage"
        }
      }
    }
  }
}
