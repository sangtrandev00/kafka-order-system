2025-06-21 21:10:05,576 p=32583 u=trannhatsang n=ansible WARNING| [WARNING]: Found both group and host with same name: minikube

2025-06-21 21:10:05,939 p=32583 u=trannhatsang n=ansible WARNING| [WARNING]: Found variable using reserved name: namespace

2025-06-21 21:10:05,945 p=32583 u=trannhatsang n=ansible INFO| [DEPRECATION WARNING]: community.general.yaml has been deprecated. The plugin has been superseded by the the option `result_format=yaml` in callback
 plugin ansible.builtin.default from ansible-core 2.13 onwards. This feature will be removed from community.general in version 12.0.0. Deprecation 
warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.
2025-06-21 21:10:05,971 p=32583 u=trannhatsang n=ansible INFO| PLAY [Deploy Kafka Microservices to Kubernetes] *****************************************************************************************************
2025-06-21 21:10:05,995 p=32583 u=trannhatsang n=ansible WARNING| [WARNING]: Found variable using reserved name: environment

2025-06-21 21:10:05,995 p=32583 u=trannhatsang n=ansible INFO| TASK [Check if Minikube is running] *****************************************************************************************************************
2025-06-21 21:10:06,585 p=32583 u=trannhatsang n=ansible WARNING| [WARNING]: Platform darwin on host localhost is using the discovered Python interpreter at /opt/homebrew/bin/python3.13, but future installation of
another Python interpreter could change the meaning of that path. See https://docs.ansible.com/ansible-
core/2.18/reference_appendices/interpreter_discovery.html for more information.

2025-06-21 21:10:06,586 p=32583 u=trannhatsang n=ansible INFO| fatal: [localhost]: FAILED! => changed=true 
  ansible_facts:
    discovered_interpreter_python: /opt/homebrew/bin/python3.13
  cmd:
  - minikube
  - status
  delta: '0:00:00.345002'
  end: '2025-06-21 21:10:06.562563'
  failed_when_result: true
  msg: ''
  rc: 0
  start: '2025-06-21 21:10:06.217561'
  stderr: |-
    E0621 21:10:06.561586   32606 status.go:179] status error: host: state: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
    stdout:
  
  
    stderr:
    Cannot connect to the Docker daemon at unix:///Users/trannhatsang/.docker/run/docker.sock. Is the docker daemon running?
    E0621 21:10:06.561592   32606 status.go:126] status error: host: state: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
    stdout:
  
  
    stderr:
    Cannot connect to the Docker daemon at unix:///Users/trannhatsang/.docker/run/docker.sock. Is the docker daemon running?
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2025-06-21 21:10:06,587 p=32583 u=trannhatsang n=ansible INFO| PLAY RECAP ******************************************************************************************************************************************
2025-06-21 21:10:06,587 p=32583 u=trannhatsang n=ansible INFO| localhost                  : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-21 21:34:50,357 p=57885 u=trannhatsang n=ansible INFO| PLAY [Deploy Kafka Microservices to Kubernetes] **********************************************************************************************************
2025-06-21 21:34:50,363 p=57885 u=trannhatsang n=ansible WARNING| [WARNING]: Found variable using reserved name: environment

2025-06-21 21:34:50,363 p=57885 u=trannhatsang n=ansible INFO| TASK [Check if Docker is running] ************************************************************************************************************************
2025-06-21 21:34:50,903 p=57885 u=trannhatsang n=ansible WARNING| [WARNING]: Platform darwin on host localhost is using the discovered Python interpreter at /opt/homebrew/bin/python3.13, but future installation of
another Python interpreter could change the meaning of that path. See https://docs.ansible.com/ansible-
core/2.18/reference_appendices/interpreter_discovery.html for more information.

2025-06-21 21:34:50,904 p=57885 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-21 21:34:50,905 p=57885 u=trannhatsang n=ansible INFO| TASK [Fail if Docker is not running] *********************************************************************************************************************
2025-06-21 21:34:50,914 p=57885 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-21 21:34:50,915 p=57885 u=trannhatsang n=ansible INFO| TASK [Check if Minikube is running] **********************************************************************************************************************
2025-06-21 21:34:51,652 p=57885 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-21 21:34:51,653 p=57885 u=trannhatsang n=ansible INFO| TASK [Start Minikube if not running] *********************************************************************************************************************
2025-06-21 21:34:51,665 p=57885 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-21 21:34:51,666 p=57885 u=trannhatsang n=ansible INFO| TASK [Wait for Minikube to be ready] *********************************************************************************************************************
2025-06-21 21:34:51,970 p=57885 u=trannhatsang n=ansible INFO| changed: [localhost]
2025-06-21 21:34:51,971 p=57885 u=trannhatsang n=ansible INFO| TASK [Get Minikube IP] ***********************************************************************************************************************************
2025-06-21 21:34:52,261 p=57885 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-21 21:34:52,263 p=57885 u=trannhatsang n=ansible INFO| TASK [Set Minikube IP fact] ******************************************************************************************************************************
2025-06-21 21:34:52,271 p=57885 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-21 21:34:52,273 p=57885 u=trannhatsang n=ansible INFO| TASK [Configure Docker environment for Minikube] *********************************************************************************************************
2025-06-21 21:34:52,825 p=57885 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-21 21:34:52,827 p=57885 u=trannhatsang n=ansible INFO| TASK [Build Docker images] *******************************************************************************************************************************
2025-06-21 21:34:52,835 p=57885 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/build-images.yml for localhost
2025-06-21 21:34:52,836 p=57885 u=trannhatsang n=ansible INFO| TASK [Set Docker environment for Minikube] ***************************************************************************************************************
2025-06-21 21:34:53,548 p=57885 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-21 21:34:53,549 p=57885 u=trannhatsang n=ansible INFO| TASK [Build Docker images for each service] **************************************************************************************************************
2025-06-21 21:35:23,408 p=57885 u=trannhatsang n=ansible INFO| failed: [localhost] (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2}) => changed=true 
  ansible_loop_var: item
  cmd: |-
    eval $(minikube docker-env)
    docker build -f apps/order-gateway/Dockerfile -t kafka-microservices/order-gateway:latest .
  delta: '0:00:29.681467'
  end: '2025-06-21 21:35:23.375354'
  item:
    image: kafka-microservices/order-gateway:latest
    name: order-gateway
    port: 3000
    replicas: 2
  msg: non-zero return code
  rc: 1
  start: '2025-06-21 21:34:53.693887'
  stderr: |-
    #0 building with "default" instance using docker driver
  
    #1 [internal] load build definition from dockerfile
    #1 transferring dockerfile: 417B done
    #1 DONE 0.0s
  
    #2 [internal] load metadata for docker.io/library/node:18-alpine
    #2 DONE 2.2s
  
    #3 [internal] load .dockerignore
    #3 transferring context: 2B done
    #3 DONE 0.0s
  
    #4 [build 1/5] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
    #4 DONE 0.0s
  
    #5 [build 2/5] WORKDIR /app
    #5 CACHED
  
    #6 [internal] load build context
    #6 transferring context: 275.36MB 5.2s
    #6 transferring context: 388.63MB 7.7s done
    #6 DONE 7.8s
  
    #7 [build 3/5] COPY . .
    #7 ...
  
    #8 [base 3/4] COPY package*.json ./
    #8 DONE 1.2s
  
    #9 [base 4/4] RUN npm ci --only=production && npm cache clean --force
    #9 0.502 npm warn config only Use `--omit=dev` to omit dev dependencies from the install.
    #9 ...
  
    #7 [build 3/5] COPY . .
    #7 DONE 5.6s
  
    #10 [build 4/5] RUN npm ci
    #10 13.10 npm warn EBADENGINE Unsupported engine {
    #10 13.10 npm warn EBADENGINE   package: '@nestjs/core@11.1.3',
    #10 13.10 npm warn EBADENGINE   required: { node: '>= 20' },
    #10 13.10 npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
    #10 13.10 npm warn EBADENGINE }
    #10 13.10 npm warn EBADENGINE Unsupported engine {
    #10 13.10 npm warn EBADENGINE   package: 'file-type@21.0.0',
    #10 13.10 npm warn EBADENGINE   required: { node: '>=20' },
    #10 13.10 npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
    #10 13.10 npm warn EBADENGINE }
    #10 13.13 npm error code EUSAGE
    #10 ...
  
    #9 [base 4/4] RUN npm ci --only=production && npm cache clean --force
    #9 17.28 npm warn EBADENGINE Unsupported engine {
    #9 17.28 npm warn EBADENGINE   package: '@nestjs/core@11.1.3',
    #9 17.28 npm warn EBADENGINE   required: { node: '>= 20' },
    #9 17.28 npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
    #9 17.28 npm warn EBADENGINE }
    #9 17.29 npm warn EBADENGINE Unsupported engine {
    #9 17.29 npm warn EBADENGINE   package: 'file-type@21.0.0',
    #9 17.29 npm warn EBADENGINE   required: { node: '>=20' },
    #9 17.29 npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
    #9 17.29 npm warn EBADENGINE }
    #9 17.31 npm error code EUSAGE
    #9 17.31 npm error
    #9 17.31 npm error `npm ci` can only install packages when your package.json and package-lock.json or npm-shrinkwrap.json are in sync. Please update your lock file with `npm install` before continuing.
    #9 17.31 npm error
    #9 17.31 npm error Missing: @nestjs/config@4.0.2 from lock file
    #9 17.31 npm error Missing: @nestjs/microservices@11.1.3 from lock file
    #9 17.31 npm error Missing: @nestjs/typeorm@11.0.0 from lock file
    #9 17.31 npm error Missing: typeorm@0.3.25 from lock file
    #9 17.31 npm error Missing: @types/pg@8.15.4 from lock file
    #9 17.31 npm error Missing: class-transformer@0.5.1 from lock file
    #9 17.31 npm error Missing: class-validator@0.14.2 from lock file
    #9 17.31 npm error Missing: concurrently@9.1.2 from lock file
    #9 17.31 npm error Missing: kafkajs@2.2.4 from lock file
    #9 17.31 npm error Missing: pg@8.16.2 from lock file
    #9 17.31 npm error Invalid: lock file's uuid@8.3.2 does not satisfy uuid@11.1.0
    #9 17.31 npm error Invalid: lock file's chokidar@3.6.0 does not satisfy chokidar@4.0.3
    #9 17.31 npm error Missing: dotenv-expand@12.0.1 from lock file
    #9 17.31 npm error Missing: lodash@4.17.21 from lock file
    #9 17.31 npm error Missing: pg-protocol@1.10.2 from lock file
    #9 17.31 npm error Missing: pg-types@2.2.0 from lock file
    #9 17.31 npm error Invalid: lock file's readdirp@3.6.0 does not satisfy readdirp@4.1.2
    #9 17.31 npm error Missing: @types/validator@13.15.2 from lock file
    #9 17.31 npm error Missing: libphonenumber-js@1.12.9 from lock file
    #9 17.31 npm error Missing: validator@13.15.15 from lock file
    #9 17.31 npm error Missing: supports-color@8.1.1 from lock file
    #9 17.31 npm error Missing: chokidar@3.6.0 from lock file
    #9 17.31 npm error Missing: pg-cloudflare@1.2.6 from lock file
    #9 17.31 npm error Missing: pg-connection-string@2.9.1 from lock file
    #9 17.31 npm error Missing: pg-pool@3.10.1 from lock file
    #9 17.31 npm error Missing: pgpass@1.0.5 from lock file
    #9 17.31 npm error Missing: pg-int8@1.0.1 from lock file
    #9 17.31 npm error Missing: postgres-array@2.0.0 from lock file
    #9 17.31 npm error Missing: postgres-bytea@1.0.0 from lock file
    #9 17.31 npm error Missing: postgres-date@1.0.7 from lock file
    #9 17.31 npm error Missing: postgres-interval@1.2.0 from lock file
    #9 17.31 npm error Missing: split2@4.2.0 from lock file
    #9 17.31 npm error Missing: uuid@8.3.2 from lock file
    #9 17.31 npm error Missing: @sqltools/formatter@1.2.5 from lock file
    #9 17.31 npm error Missing: ansis@3.17.0 from lock file
    #9 17.31 npm error Missing: app-root-path@3.1.0 from lock file
    #9 17.31 npm error Missing: buffer@6.0.3 from lock file
    #9 17.31 npm error Missing: dayjs@1.11.13 from lock file
    #9 17.31 npm error Missing: glob@10.4.5 from lock file
    #9 17.31 npm error Missing: sha.js@2.4.11 from lock file
    #9 17.31 npm error Missing: sql-highlight@6.1.0 from lock file
    #9 17.31 npm error Missing: chokidar@3.6.0 from lock file
    #9 17.31 npm error Missing: glob-parent@5.1.2 from lock file
    #9 17.31 npm error Missing: readdirp@3.6.0 from lock file
    #9 17.31 npm error Missing: picomatch@2.3.1 from lock file
    #9 17.31 npm error Missing: minimatch@9.0.5 from lock file
    #9 17.31 npm error Missing: glob-parent@5.1.2 from lock file
    #9 17.31 npm error Missing: readdirp@3.6.0 from lock file
    #9 17.31 npm error Missing: picomatch@2.3.1 from lock file
    #9 17.31 npm error
    #9 17.31 npm error Clean install a project
    #9 17.31 npm error
    #9 17.31 npm error Usage:
    #9 17.31 npm error npm ci
    #9 17.31 npm error
    #9 17.31 npm error Options:
    #9 17.31 npm error [--install-strategy <hoisted|nested|shallow|linked>] [--legacy-bundling]
    #9 17.31 npm error [--global-style] [--omit <dev|optional|peer> [--omit <dev|optional|peer> ...]]
    #9 17.31 npm error [--include <prod|dev|optional|peer> [--include <prod|dev|optional|peer> ...]]
    #9 17.31 npm error [--strict-peer-deps] [--foreground-scripts] [--ignore-scripts] [--no-audit]
    #9 17.31 npm error [--no-bin-links] [--no-fund] [--dry-run]
    #9 17.31 npm error [-w|--workspace <workspace-name> [-w|--workspace <workspace-name> ...]]
    #9 17.31 npm error [-ws|--workspaces] [--include-workspace-root] [--install-links]
    #9 17.31 npm error
    #9 17.31 npm error aliases: clean-install, ic, install-clean, isntall-clean
    #9 17.31 npm error
    #9 17.31 npm error Run "npm help ci" for more info
    #9 17.31 npm notice
    #9 17.31 npm notice New major version of npm available! 10.8.2 -> 11.4.2
    #9 17.31 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.2
    #9 17.31 npm notice To update run: npm install -g npm@11.4.2
    #9 17.31 npm notice
    #9 17.31 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-06-21T14_35_06_338Z-debug-0.log
    #9 ERROR: process "/bin/sh -c npm ci --only=production && npm cache clean --force" did not complete successfully: exit code: 1
  
    #10 [build 4/5] RUN npm ci
    #10 13.13 npm error
    #10 13.13 npm error `npm ci` can only install packages when your package.json and package-lock.json or npm-shrinkwrap.json are in sync. Please update your lock file with `npm install` before continuing.
    #10 13.13 npm error
    #10 13.13 npm error Missing: @kafka-microservices/logger-service@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/logger-service@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/logger-service-e2e@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/logger-service-e2e@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/notification-service@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/notification-service@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/notification-service-e2e@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/notification-service-e2e@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/order-gateway@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/order-gateway@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/order-gateway-e2e@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/order-gateway-e2e@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/order-service@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/order-service@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/order-service-e2e@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/order-service-e2e@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/shared@0.0.1 from lock file
    #10 13.13 npm error Missing: @kafka-microservices/shared@0.0.1 from lock file
    #10 13.13 npm error Missing: @nestjs/config@4.0.2 from lock file
    #10 13.13 npm error Missing: @nestjs/microservices@11.1.3 from lock file
    #10 13.13 npm error Missing: @nestjs/typeorm@11.0.0 from lock file
    #10 13.13 npm error Missing: typeorm@0.3.25 from lock file
    #10 13.13 npm error Missing: @types/pg@8.15.4 from lock file
    #10 13.13 npm error Missing: class-transformer@0.5.1 from lock file
    #10 13.13 npm error Missing: class-validator@0.14.2 from lock file
    #10 13.13 npm error Missing: concurrently@9.1.2 from lock file
    #10 13.13 npm error Missing: kafkajs@2.2.4 from lock file
    #10 13.13 npm error Missing: pg@8.16.2 from lock file
    #10 13.13 npm error Invalid: lock file's uuid@8.3.2 does not satisfy uuid@11.1.0
    #10 13.13 npm error Invalid: lock file's chokidar@3.6.0 does not satisfy chokidar@4.0.3
    #10 13.13 npm error Missing: dotenv-expand@12.0.1 from lock file
    #10 13.13 npm error Missing: lodash@4.17.21 from lock file
    #10 13.13 npm error Missing: pg-protocol@1.10.2 from lock file
    #10 13.13 npm error Missing: pg-types@2.2.0 from lock file
    #10 13.13 npm error Invalid: lock file's readdirp@3.6.0 does not satisfy readdirp@4.1.2
    #10 13.13 npm error Missing: @types/validator@13.15.2 from lock file
    #10 13.13 npm error Missing: libphonenumber-js@1.12.9 from lock file
    #10 13.13 npm error Missing: validator@13.15.15 from lock file
    #10 13.13 npm error Missing: supports-color@8.1.1 from lock file
    #10 13.13 npm error Missing: chokidar@3.6.0 from lock file
    #10 13.13 npm error Missing: pg-cloudflare@1.2.6 from lock file
    #10 13.13 npm error Missing: pg-connection-string@2.9.1 from lock file
    #10 13.13 npm error Missing: pg-pool@3.10.1 from lock file
    #10 13.13 npm error Missing: pgpass@1.0.5 from lock file
    #10 13.13 npm error Missing: pg-int8@1.0.1 from lock file
    #10 13.13 npm error Missing: postgres-array@2.0.0 from lock file
    #10 13.13 npm error Missing: postgres-bytea@1.0.0 from lock file
    #10 13.13 npm error Missing: postgres-date@1.0.7 from lock file
    #10 13.13 npm error Missing: postgres-interval@1.2.0 from lock file
    #10 13.13 npm error Missing: split2@4.2.0 from lock file
    #10 13.13 npm error Missing: uuid@8.3.2 from lock file
    #10 13.13 npm error Missing: @sqltools/formatter@1.2.5 from lock file
    #10 13.13 npm error Missing: ansis@3.17.0 from lock file
    #10 13.13 npm error Missing: app-root-path@3.1.0 from lock file
    #10 13.13 npm error Missing: buffer@6.0.3 from lock file
    #10 13.13 npm error Missing: dayjs@1.11.13 from lock file
    #10 13.13 npm error Missing: glob@10.4.5 from lock file
    #10 13.13 npm error Missing: sha.js@2.4.11 from lock file
    #10 13.13 npm error Missing: sql-highlight@6.1.0 from lock file
    #10 13.13 npm error Missing: chokidar@3.6.0 from lock file
    #10 13.13 npm error Missing: glob-parent@5.1.2 from lock file
    #10 13.13 npm error Missing: readdirp@3.6.0 from lock file
    #10 13.13 npm error Missing: picomatch@2.3.1 from lock file
    #10 13.13 npm error Missing: minimatch@9.0.5 from lock file
    #10 13.13 npm error Missing: glob-parent@5.1.2 from lock file
    #10 13.13 npm error Missing: readdirp@3.6.0 from lock file
    #10 13.13 npm error Missing: picomatch@2.3.1 from lock file
    #10 13.13 npm error
    #10 13.13 npm error Clean install a project
    #10 13.13 npm error
    #10 13.13 npm error Usage:
    #10 13.13 npm error npm ci
    #10 13.13 npm error
    #10 13.13 npm error Options:
    #10 13.13 npm error [--install-strategy <hoisted|nested|shallow|linked>] [--legacy-bundling]
    #10 13.13 npm error [--global-style] [--omit <dev|optional|peer> [--omit <dev|optional|peer> ...]]
    #10 13.13 npm error [--include <prod|dev|optional|peer> [--include <prod|dev|optional|peer> ...]]
    #10 13.13 npm error [--strict-peer-deps] [--foreground-scripts] [--ignore-scripts] [--no-audit]
    #10 13.13 npm error [--no-bin-links] [--no-fund] [--dry-run]
    #10 13.13 npm error [-w|--workspace <workspace-name> [-w|--workspace <workspace-name> ...]]
    #10 13.13 npm error [-ws|--workspaces] [--include-workspace-root] [--install-links]
    #10 13.13 npm error
    #10 13.13 npm error aliases: clean-install, ic, install-clean, isntall-clean
    #10 13.13 npm error
    #10 13.13 npm error Run "npm help ci" for more info
    #10 13.13 npm notice
    #10 13.13 npm notice New major version of npm available! 10.8.2 -> 11.4.2
    #10 13.13 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.2
    #10 13.13 npm notice To update run: npm install -g npm@11.4.2
    #10 13.13 npm notice
    #10 13.13 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-06-21T14_35_10_267Z-debug-0.log
    #10 ERROR: process "/bin/sh -c npm ci" did not complete successfully: exit code: 1
    ------
     > [base 4/4] RUN npm ci --only=production && npm cache clean --force:
    17.31 npm error
    17.31 npm error aliases: clean-install, ic, install-clean, isntall-clean
    17.31 npm error
    17.31 npm error Run "npm help ci" for more info
    17.31 npm notice
    17.31 npm notice New major version of npm available! 10.8.2 -> 11.4.2
    17.31 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.2
    17.31 npm notice To update run: npm install -g npm@11.4.2
    17.31 npm notice
    17.31 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-06-21T14_35_06_338Z-debug-0.log
    ------
    ------
     > [build 4/5] RUN npm ci:
    13.13 npm error
    13.13 npm error aliases: clean-install, ic, install-clean, isntall-clean
    13.13 npm error
    13.13 npm error Run "npm help ci" for more info
    13.13 npm notice
    13.13 npm notice New major version of npm available! 10.8.2 -> 11.4.2
    13.13 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.2
    13.13 npm notice To update run: npm install -g npm@11.4.2
    13.13 npm notice
    13.13 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-06-21T14_35_10_267Z-debug-0.log
    ------
    dockerfile:4
    --------------------
       2 |     WORKDIR /app
       3 |     COPY package*.json ./
       4 | >>> RUN npm ci --only=production && npm cache clean --force
       5 |
       6 |     FROM node:18-alpine AS build
    --------------------
    ERROR: failed to solve: process "/bin/sh -c npm ci --only=production && npm cache clean --force" did not complete successfully: exit code: 1
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2025-06-21 21:35:38,496 p=57885 u=trannhatsang n=ansible INFO| failed: [localhost] (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2}) => changed=true 
  ansible_loop_var: item
  cmd: |-
    eval $(minikube docker-env)
    docker build -f apps/order-service/Dockerfile -t kafka-microservices/order-service:latest .
  delta: '0:00:14.909723'
  end: '2025-06-21 21:35:38.470160'
  item:
    image: kafka-microservices/order-service:latest
    name: order-service
    replicas: 2
  msg: non-zero return code
  rc: 1
  start: '2025-06-21 21:35:23.560437'
  stderr: |-
    #0 building with "default" instance using docker driver
  
    #1 [internal] load build definition from dockerfile
    #1 transferring dockerfile: 405B done
    #1 DONE 0.0s
  
    #2 [internal] load metadata for docker.io/library/node:18-alpine
    #2 DONE 1.1s
  
    #3 [internal] load .dockerignore
    #3 transferring context: 2B done
    #3 DONE 0.0s
  
    #4 [build 1/5] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
    #4 DONE 0.0s
  
    #5 [internal] load build context
    #5 transferring context: 3.87MB 1.1s done
    #5 DONE 1.2s
  
    #6 [build 2/5] WORKDIR /app
    #6 CACHED
  
    #7 [base 3/4] COPY package*.json ./
    #7 CACHED
  
    #8 [base 4/4] RUN npm ci --only=production && npm cache clean --force
    #8 0.301 npm warn config only Use `--omit=dev` to omit dev dependencies from the install.
    #8 ...
  
    #9 [build 3/5] COPY . .
    #9 DONE 4.8s
  
    #10 [build 4/5] RUN npm ci
    #10 ...
  
    #8 [base 4/4] RUN npm ci --only=production && npm cache clean --force
    #8 11.42 npm warn EBADENGINE Unsupported engine {
    #8 11.42 npm warn EBADENGINE   package: '@nestjs/core@11.1.3',
    #8 11.42 npm warn EBADENGINE   required: { node: '>= 20' },
    #8 11.42 npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
    #8 11.42 npm warn EBADENGINE }
    #8 11.42 npm warn EBADENGINE Unsupported engine {
    #8 11.42 npm warn EBADENGINE   package: 'file-type@21.0.0',
    #8 11.42 npm warn EBADENGINE   required: { node: '>=20' },
    #8 11.42 npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
    #8 11.42 npm warn EBADENGINE }
    #8 11.43 npm error code EUSAGE
    #8 11.43 npm error
    #8 11.43 npm error `npm ci` can only install packages when your package.json and package-lock.json or npm-shrinkwrap.json are in sync. Please update your lock file with `npm install` before continuing.
    #8 11.43 npm error
    #8 11.43 npm error Missing: @nestjs/config@4.0.2 from lock file
    #8 11.43 npm error Missing: @nestjs/microservices@11.1.3 from lock file
    #8 11.43 npm error Missing: @nestjs/typeorm@11.0.0 from lock file
    #8 11.43 npm error Missing: typeorm@0.3.25 from lock file
    #8 11.43 npm error Missing: @types/pg@8.15.4 from lock file
    #8 11.43 npm error Missing: class-transformer@0.5.1 from lock file
    #8 11.43 npm error Missing: class-validator@0.14.2 from lock file
    #8 11.43 npm error Missing: concurrently@9.1.2 from lock file
    #8 11.43 npm error Missing: kafkajs@2.2.4 from lock file
    #8 11.43 npm error Missing: pg@8.16.2 from lock file
    #8 11.43 npm error Invalid: lock file's uuid@8.3.2 does not satisfy uuid@11.1.0
    #8 11.43 npm error Invalid: lock file's chokidar@3.6.0 does not satisfy chokidar@4.0.3
    #8 11.43 npm error Missing: dotenv-expand@12.0.1 from lock file
    #8 11.43 npm error Missing: lodash@4.17.21 from lock file
    #8 11.43 npm error Missing: pg-protocol@1.10.2 from lock file
    #8 11.43 npm error Missing: pg-types@2.2.0 from lock file
    #8 11.43 npm error Invalid: lock file's readdirp@3.6.0 does not satisfy readdirp@4.1.2
    #8 11.43 npm error Missing: @types/validator@13.15.2 from lock file
    #8 11.43 npm error Missing: libphonenumber-js@1.12.9 from lock file
    #8 11.43 npm error Missing: validator@13.15.15 from lock file
    #8 11.43 npm error Missing: supports-color@8.1.1 from lock file
    #8 11.43 npm error Missing: chokidar@3.6.0 from lock file
    #8 11.43 npm error Missing: pg-cloudflare@1.2.6 from lock file
    #8 11.43 npm error Missing: pg-connection-string@2.9.1 from lock file
    #8 11.43 npm error Missing: pg-pool@3.10.1 from lock file
    #8 11.43 npm error Missing: pgpass@1.0.5 from lock file
    #8 11.43 npm error Missing: pg-int8@1.0.1 from lock file
    #8 11.43 npm error Missing: postgres-array@2.0.0 from lock file
    #8 11.43 npm error Missing: postgres-bytea@1.0.0 from lock file
    #8 11.43 npm error Missing: postgres-date@1.0.7 from lock file
    #8 11.43 npm error Missing: postgres-interval@1.2.0 from lock file
    #8 11.43 npm error Missing: split2@4.2.0 from lock file
    #8 11.43 npm error Missing: uuid@8.3.2 from lock file
    #8 11.43 npm error Missing: @sqltools/formatter@1.2.5 from lock file
    #8 11.43 npm error Missing: ansis@3.17.0 from lock file
    #8 11.43 npm error Missing: app-root-path@3.1.0 from lock file
    #8 11.43 npm error Missing: buffer@6.0.3 from lock file
    #8 11.43 npm error Missing: dayjs@1.11.13 from lock file
    #8 11.43 npm error Missing: glob@10.4.5 from lock file
    #8 11.43 npm error Missing: sha.js@2.4.11 from lock file
    #8 11.43 npm error Missing: sql-highlight@6.1.0 from lock file
    #8 11.43 npm error Missing: chokidar@3.6.0 from lock file
    #8 11.43 npm error Missing: glob-parent@5.1.2 from lock file
    #8 11.43 npm error Missing: readdirp@3.6.0 from lock file
    #8 11.43 npm error Missing: picomatch@2.3.1 from lock file
    #8 11.43 npm error Missing: minimatch@9.0.5 from lock file
    #8 11.43 npm error Missing: glob-parent@5.1.2 from lock file
    #8 11.43 npm error Missing: readdirp@3.6.0 from lock file
    #8 11.43 npm error Missing: picomatch@2.3.1 from lock file
    #8 11.43 npm error
    #8 11.43 npm error Clean install a project
    #8 11.43 npm error
    #8 11.43 npm error Usage:
    #8 11.43 npm error npm ci
    #8 11.43 npm error
    #8 11.43 npm error Options:
    #8 11.43 npm error [--install-strategy <hoisted|nested|shallow|linked>] [--legacy-bundling]
    #8 11.43 npm error [--global-style] [--omit <dev|optional|peer> [--omit <dev|optional|peer> ...]]
    #8 11.43 npm error [--include <prod|dev|optional|peer> [--include <prod|dev|optional|peer> ...]]
    #8 11.43 npm error [--strict-peer-deps] [--foreground-scripts] [--ignore-scripts] [--no-audit]
    #8 11.43 npm error [--no-bin-links] [--no-fund] [--dry-run]
    #8 11.43 npm error [-w|--workspace <workspace-name> [-w|--workspace <workspace-name> ...]]
    #8 11.43 npm error [-ws|--workspaces] [--include-workspace-root] [--install-links]
    #8 11.43 npm error
    #8 11.43 npm error aliases: clean-install, ic, install-clean, isntall-clean
    #8 11.43 npm error
    #8 11.43 npm error Run "npm help ci" for more info
    #8 11.43 npm notice
    #8 11.43 npm notice New major version of npm available! 10.8.2 -> 11.4.2
    #8 11.43 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.2
    #8 11.43 npm notice To update run: npm install -g npm@11.4.2
    #8 11.43 npm notice
    #8 11.43 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-06-21T14_35_27_108Z-debug-0.log
    #8 ERROR: process "/bin/sh -c npm ci --only=production && npm cache clean --force" did not complete successfully: exit code: 1
  
    #10 [build 4/5] RUN npm ci
    #10 CANCELED
    ------
     > [base 4/4] RUN npm ci --only=production && npm cache clean --force:
    11.43 npm error
    11.43 npm error aliases: clean-install, ic, install-clean, isntall-clean
    11.43 npm error
    11.43 npm error Run "npm help ci" for more info
    11.43 npm notice
    11.43 npm notice New major version of npm available! 10.8.2 -> 11.4.2
    11.43 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.2
    11.43 npm notice To update run: npm install -g npm@11.4.2
    11.43 npm notice
    11.43 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-06-21T14_35_27_108Z-debug-0.log
    ------
    dockerfile:4
    --------------------
       2 |     WORKDIR /app
       3 |     COPY package*.json ./
       4 | >>> RUN npm ci --only=production && npm cache clean --force
       5 |
       6 |     FROM node:18-alpine AS build
    --------------------
    ERROR: failed to solve: process "/bin/sh -c npm ci --only=production && npm cache clean --force" did not complete successfully: exit code: 1
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2025-06-21 21:35:52,785 p=57885 u=trannhatsang n=ansible INFO| failed: [localhost] (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1}) => changed=true 
  ansible_loop_var: item
  cmd: |-
    eval $(minikube docker-env)
    docker build -f apps/notification-service/Dockerfile -t kafka-microservices/notification-service:latest .
  delta: '0:00:14.126467'
  end: '2025-06-21 21:35:52.755307'
  item:
    image: kafka-microservices/notification-service:latest
    name: notification-service
    replicas: 1
  msg: non-zero return code
  rc: 1
  start: '2025-06-21 21:35:38.628840'
  stderr: |-
    #0 building with "default" instance using docker driver
  
    #1 [internal] load build definition from dockerfile
    #1 transferring dockerfile: 419B done
    #1 DONE 0.0s
  
    #2 [internal] load metadata for docker.io/library/node:18-alpine
    #2 DONE 1.0s
  
    #3 [internal] load .dockerignore
    #3 transferring context: 2B done
    #3 DONE 0.0s
  
    #4 [build 1/5] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
    #4 DONE 0.0s
  
    #5 [internal] load build context
    #5 transferring context: 3.88MB 1.3s done
    #5 DONE 1.3s
  
    #6 [base 3/4] COPY package*.json ./
    #6 CACHED
  
    #7 [build 2/5] WORKDIR /app
    #7 CACHED
  
    #8 [build 3/5] COPY . .
    #8 DONE 5.6s
  
    #9 [build 4/5] RUN npm ci
    #9 ...
  
    #10 [base 4/4] RUN npm ci --only=production && npm cache clean --force
    #10 0.368 npm warn config only Use `--omit=dev` to omit dev dependencies from the install.
    #10 10.64 npm warn EBADENGINE Unsupported engine {
    #10 10.64 npm warn EBADENGINE   package: '@nestjs/core@11.1.3',
    #10 10.64 npm warn EBADENGINE   required: { node: '>= 20' },
    #10 10.64 npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
    #10 10.64 npm warn EBADENGINE }
    #10 10.65 npm warn EBADENGINE Unsupported engine {
    #10 10.65 npm warn EBADENGINE   package: 'file-type@21.0.0',
    #10 10.65 npm warn EBADENGINE   required: { node: '>=20' },
    #10 10.65 npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
    #10 10.65 npm warn EBADENGINE }
    #10 10.66 npm error code EUSAGE
    #10 10.66 npm error
    #10 10.66 npm error `npm ci` can only install packages when your package.json and package-lock.json or npm-shrinkwrap.json are in sync. Please update your lock file with `npm install` before continuing.
    #10 10.66 npm error
    #10 10.66 npm error Missing: @nestjs/config@4.0.2 from lock file
    #10 10.66 npm error Missing: @nestjs/microservices@11.1.3 from lock file
    #10 10.66 npm error Missing: @nestjs/typeorm@11.0.0 from lock file
    #10 10.66 npm error Missing: typeorm@0.3.25 from lock file
    #10 10.66 npm error Missing: @types/pg@8.15.4 from lock file
    #10 10.66 npm error Missing: class-transformer@0.5.1 from lock file
    #10 10.66 npm error Missing: class-validator@0.14.2 from lock file
    #10 10.66 npm error Missing: concurrently@9.1.2 from lock file
    #10 10.66 npm error Missing: kafkajs@2.2.4 from lock file
    #10 10.66 npm error Missing: pg@8.16.2 from lock file
    #10 10.66 npm error Invalid: lock file's uuid@8.3.2 does not satisfy uuid@11.1.0
    #10 10.66 npm error Invalid: lock file's chokidar@3.6.0 does not satisfy chokidar@4.0.3
    #10 10.66 npm error Missing: dotenv-expand@12.0.1 from lock file
    #10 10.66 npm error Missing: lodash@4.17.21 from lock file
    #10 10.66 npm error Missing: pg-protocol@1.10.2 from lock file
    #10 10.66 npm error Missing: pg-types@2.2.0 from lock file
    #10 10.66 npm error Invalid: lock file's readdirp@3.6.0 does not satisfy readdirp@4.1.2
    #10 10.66 npm error Missing: @types/validator@13.15.2 from lock file
    #10 10.66 npm error Missing: libphonenumber-js@1.12.9 from lock file
    #10 10.66 npm error Missing: validator@13.15.15 from lock file
    #10 10.66 npm error Missing: supports-color@8.1.1 from lock file
    #10 10.66 npm error Missing: chokidar@3.6.0 from lock file
    #10 10.66 npm error Missing: pg-cloudflare@1.2.6 from lock file
    #10 10.66 npm error Missing: pg-connection-string@2.9.1 from lock file
    #10 10.66 npm error Missing: pg-pool@3.10.1 from lock file
    #10 10.66 npm error Missing: pgpass@1.0.5 from lock file
    #10 10.66 npm error Missing: pg-int8@1.0.1 from lock file
    #10 10.66 npm error Missing: postgres-array@2.0.0 from lock file
    #10 10.66 npm error Missing: postgres-bytea@1.0.0 from lock file
    #10 10.66 npm error Missing: postgres-date@1.0.7 from lock file
    #10 10.66 npm error Missing: postgres-interval@1.2.0 from lock file
    #10 10.66 npm error Missing: split2@4.2.0 from lock file
    #10 10.66 npm error Missing: uuid@8.3.2 from lock file
    #10 10.66 npm error Missing: @sqltools/formatter@1.2.5 from lock file
    #10 10.66 npm error Missing: ansis@3.17.0 from lock file
    #10 10.66 npm error Missing: app-root-path@3.1.0 from lock file
    #10 10.66 npm error Missing: buffer@6.0.3 from lock file
    #10 10.66 npm error Missing: dayjs@1.11.13 from lock file
    #10 10.66 npm error Missing: glob@10.4.5 from lock file
    #10 10.66 npm error Missing: sha.js@2.4.11 from lock file
    #10 10.66 npm error Missing: sql-highlight@6.1.0 from lock file
    #10 10.66 npm error Missing: chokidar@3.6.0 from lock file
    #10 10.66 npm error Missing: glob-parent@5.1.2 from lock file
    #10 10.66 npm error Missing: readdirp@3.6.0 from lock file
    #10 10.66 npm error Missing: picomatch@2.3.1 from lock file
    #10 10.66 npm error Missing: minimatch@9.0.5 from lock file
    #10 10.66 npm error Missing: glob-parent@5.1.2 from lock file
    #10 10.66 npm error Missing: readdirp@3.6.0 from lock file
    #10 10.66 npm error Missing: picomatch@2.3.1 from lock file
    #10 10.66 npm error
    #10 10.66 npm error Clean install a project
    #10 10.66 npm error
    #10 10.66 npm error Usage:
    #10 10.66 npm error npm ci
    #10 10.66 npm error
    #10 10.66 npm error Options:
    #10 10.66 npm error [--install-strategy <hoisted|nested|shallow|linked>] [--legacy-bundling]
    #10 10.66 npm error [--global-style] [--omit <dev|optional|peer> [--omit <dev|optional|peer> ...]]
    #10 10.66 npm error [--include <prod|dev|optional|peer> [--include <prod|dev|optional|peer> ...]]
    #10 10.66 npm error [--strict-peer-deps] [--foreground-scripts] [--ignore-scripts] [--no-audit]
    #10 10.66 npm error [--no-bin-links] [--no-fund] [--dry-run]
    #10 10.66 npm error [-w|--workspace <workspace-name> [-w|--workspace <workspace-name> ...]]
    #10 10.66 npm error [-ws|--workspaces] [--include-workspace-root] [--install-links]
    #10 10.66 npm error
    #10 10.66 npm error aliases: clean-install, ic, install-clean, isntall-clean
    #10 10.66 npm error
    #10 10.66 npm error Run "npm help ci" for more info
    #10 10.66 npm notice
    #10 10.66 npm notice New major version of npm available! 10.8.2 -> 11.4.2
    #10 10.66 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.2
    #10 10.66 npm notice To update run: npm install -g npm@11.4.2
    #10 10.66 npm notice
    #10 10.66 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-06-21T14_35_42_269Z-debug-0.log
    #10 ERROR: process "/bin/sh -c npm ci --only=production && npm cache clean --force" did not complete successfully: exit code: 1
  
    #9 [build 4/5] RUN npm ci
    #9 CANCELED
    ------
     > [base 4/4] RUN npm ci --only=production && npm cache clean --force:
    10.66 npm error
    10.66 npm error aliases: clean-install, ic, install-clean, isntall-clean
    10.66 npm error
    10.66 npm error Run "npm help ci" for more info
    10.66 npm notice
    10.66 npm notice New major version of npm available! 10.8.2 -> 11.4.2
    10.66 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.2
    10.66 npm notice To update run: npm install -g npm@11.4.2
    10.66 npm notice
    10.66 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-06-21T14_35_42_269Z-debug-0.log
    ------
    dockerfile:4
    --------------------
       2 |     WORKDIR /app
       3 |     COPY package*.json ./
       4 | >>> RUN npm ci --only=production && npm cache clean --force
       5 |
       6 |     FROM node:18-alpine AS build
    --------------------
    ERROR: failed to solve: process "/bin/sh -c npm ci --only=production && npm cache clean --force" did not complete successfully: exit code: 1
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2025-06-21 21:36:10,151 p=57885 u=trannhatsang n=ansible INFO| failed: [localhost] (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1}) => changed=true 
  ansible_loop_var: item
  cmd: |-
    eval $(minikube docker-env)
    docker build -f apps/logger-service/Dockerfile -t kafka-microservices/logger-service:latest .
  delta: '0:00:17.189123'
  end: '2025-06-21 21:36:10.115891'
  item:
    image: kafka-microservices/logger-service:latest
    name: logger-service
    replicas: 1
  msg: non-zero return code
  rc: 1
  start: '2025-06-21 21:35:52.926768'
  stderr: |-
    #0 building with "default" instance using docker driver
  
    #1 [internal] load build definition from dockerfile
    #1 transferring dockerfile: 407B done
    #1 DONE 0.0s
  
    #2 [internal] load metadata for docker.io/library/node:18-alpine
    #2 DONE 1.1s
  
    #3 [internal] load .dockerignore
    #3 transferring context: 2B done
    #3 DONE 0.0s
  
    #4 [build 1/5] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
    #4 DONE 0.0s
  
    #5 [internal] load build context
    #5 transferring context: 3.89MB 1.0s done
    #5 DONE 1.0s
  
    #6 [build 2/5] WORKDIR /app
    #6 CACHED
  
    #7 [base 3/4] COPY package*.json ./
    #7 CACHED
  
    #8 [base 4/4] RUN npm ci --only=production && npm cache clean --force
    #8 0.463 npm warn config only Use `--omit=dev` to omit dev dependencies from the install.
    #8 ...
  
    #9 [build 3/5] COPY . .
    #9 DONE 8.2s
  
    #10 [build 4/5] RUN npm ci
    #10 ...
  
    #8 [base 4/4] RUN npm ci --only=production && npm cache clean --force
    #8 13.92 npm warn EBADENGINE Unsupported engine {
    #8 13.92 npm warn EBADENGINE   package: '@nestjs/core@11.1.3',
    #8 13.92 npm warn EBADENGINE   required: { node: '>= 20' },
    #8 13.92 npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
    #8 13.92 npm warn EBADENGINE }
    #8 13.93 npm warn EBADENGINE Unsupported engine {
    #8 13.93 npm warn EBADENGINE   package: 'file-type@21.0.0',
    #8 13.93 npm warn EBADENGINE   required: { node: '>=20' },
    #8 13.93 npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
    #8 13.93 npm warn EBADENGINE }
    #8 13.94 npm error code EUSAGE
    #8 13.94 npm error
    #8 13.94 npm error `npm ci` can only install packages when your package.json and package-lock.json or npm-shrinkwrap.json are in sync. Please update your lock file with `npm install` before continuing.
    #8 13.94 npm error
    #8 13.94 npm error Missing: @nestjs/config@4.0.2 from lock file
    #8 13.94 npm error Missing: @nestjs/microservices@11.1.3 from lock file
    #8 13.94 npm error Missing: @nestjs/typeorm@11.0.0 from lock file
    #8 13.94 npm error Missing: typeorm@0.3.25 from lock file
    #8 13.94 npm error Missing: @types/pg@8.15.4 from lock file
    #8 13.94 npm error Missing: class-transformer@0.5.1 from lock file
    #8 13.94 npm error Missing: class-validator@0.14.2 from lock file
    #8 13.94 npm error Missing: concurrently@9.1.2 from lock file
    #8 13.94 npm error Missing: kafkajs@2.2.4 from lock file
    #8 13.94 npm error Missing: pg@8.16.2 from lock file
    #8 13.94 npm error Invalid: lock file's uuid@8.3.2 does not satisfy uuid@11.1.0
    #8 13.94 npm error Invalid: lock file's chokidar@3.6.0 does not satisfy chokidar@4.0.3
    #8 13.94 npm error Missing: dotenv-expand@12.0.1 from lock file
    #8 13.94 npm error Missing: lodash@4.17.21 from lock file
    #8 13.94 npm error Missing: pg-protocol@1.10.2 from lock file
    #8 13.94 npm error Missing: pg-types@2.2.0 from lock file
    #8 13.94 npm error Invalid: lock file's readdirp@3.6.0 does not satisfy readdirp@4.1.2
    #8 13.94 npm error Missing: @types/validator@13.15.2 from lock file
    #8 13.94 npm error Missing: libphonenumber-js@1.12.9 from lock file
    #8 13.94 npm error Missing: validator@13.15.15 from lock file
    #8 13.94 npm error Missing: supports-color@8.1.1 from lock file
    #8 13.94 npm error Missing: chokidar@3.6.0 from lock file
    #8 13.94 npm error Missing: pg-cloudflare@1.2.6 from lock file
    #8 13.94 npm error Missing: pg-connection-string@2.9.1 from lock file
    #8 13.94 npm error Missing: pg-pool@3.10.1 from lock file
    #8 13.94 npm error Missing: pgpass@1.0.5 from lock file
    #8 13.94 npm error Missing: pg-int8@1.0.1 from lock file
    #8 13.94 npm error Missing: postgres-array@2.0.0 from lock file
    #8 13.94 npm error Missing: postgres-bytea@1.0.0 from lock file
    #8 13.94 npm error Missing: postgres-date@1.0.7 from lock file
    #8 13.94 npm error Missing: postgres-interval@1.2.0 from lock file
    #8 13.94 npm error Missing: split2@4.2.0 from lock file
    #8 13.94 npm error Missing: uuid@8.3.2 from lock file
    #8 13.94 npm error Missing: @sqltools/formatter@1.2.5 from lock file
    #8 13.94 npm error Missing: ansis@3.17.0 from lock file
    #8 13.94 npm error Missing: app-root-path@3.1.0 from lock file
    #8 13.94 npm error Missing: buffer@6.0.3 from lock file
    #8 13.94 npm error Missing: dayjs@1.11.13 from lock file
    #8 13.94 npm error Missing: glob@10.4.5 from lock file
    #8 13.94 npm error Missing: sha.js@2.4.11 from lock file
    #8 13.94 npm error Missing: sql-highlight@6.1.0 from lock file
    #8 13.94 npm error Missing: chokidar@3.6.0 from lock file
    #8 13.94 npm error Missing: glob-parent@5.1.2 from lock file
    #8 13.94 npm error Missing: readdirp@3.6.0 from lock file
    #8 13.94 npm error Missing: picomatch@2.3.1 from lock file
    #8 13.94 npm error Missing: minimatch@9.0.5 from lock file
    #8 13.94 npm error Missing: glob-parent@5.1.2 from lock file
    #8 13.94 npm error Missing: readdirp@3.6.0 from lock file
    #8 13.94 npm error Missing: picomatch@2.3.1 from lock file
    #8 13.94 npm error
    #8 13.94 npm error Clean install a project
    #8 13.94 npm error
    #8 13.94 npm error Usage:
    #8 13.94 npm error npm ci
    #8 13.94 npm error
    #8 13.94 npm error Options:
    #8 13.94 npm error [--install-strategy <hoisted|nested|shallow|linked>] [--legacy-bundling]
    #8 13.94 npm error [--global-style] [--omit <dev|optional|peer> [--omit <dev|optional|peer> ...]]
    #8 13.94 npm error [--include <prod|dev|optional|peer> [--include <prod|dev|optional|peer> ...]]
    #8 13.94 npm error [--strict-peer-deps] [--foreground-scripts] [--ignore-scripts] [--no-audit]
    #8 13.94 npm error [--no-bin-links] [--no-fund] [--dry-run]
    #8 13.94 npm error [-w|--workspace <workspace-name> [-w|--workspace <workspace-name> ...]]
    #8 13.94 npm error [-ws|--workspaces] [--include-workspace-root] [--install-links]
    #8 13.94 npm error
    #8 13.94 npm error aliases: clean-install, ic, install-clean, isntall-clean
    #8 13.94 npm error
    #8 13.94 npm error Run "npm help ci" for more info
    #8 13.94 npm notice
    #8 13.94 npm notice New major version of npm available! 10.8.2 -> 11.4.2
    #8 13.94 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.2
    #8 13.94 npm notice To update run: npm install -g npm@11.4.2
    #8 13.94 npm notice
    #8 13.94 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-06-21T14_35_56_326Z-debug-0.log
    #8 ERROR: process "/bin/sh -c npm ci --only=production && npm cache clean --force" did not complete successfully: exit code: 1
  
    #10 [build 4/5] RUN npm ci
    #10 CANCELED
    ------
     > [base 4/4] RUN npm ci --only=production && npm cache clean --force:
    13.94 npm error
    13.94 npm error aliases: clean-install, ic, install-clean, isntall-clean
    13.94 npm error
    13.94 npm error Run "npm help ci" for more info
    13.94 npm notice
    13.94 npm notice New major version of npm available! 10.8.2 -> 11.4.2
    13.94 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.2
    13.94 npm notice To update run: npm install -g npm@11.4.2
    13.94 npm notice
    13.94 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-06-21T14_35_56_326Z-debug-0.log
    ------
    dockerfile:4
    --------------------
       2 |     WORKDIR /app
       3 |     COPY package*.json ./
       4 | >>> RUN npm ci --only=production && npm cache clean --force
       5 |
       6 |     FROM node:18-alpine AS build
    --------------------
    ERROR: failed to solve: process "/bin/sh -c npm ci --only=production && npm cache clean --force" did not complete successfully: exit code: 1
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2025-06-21 21:36:10,154 p=57885 u=trannhatsang n=ansible INFO| PLAY RECAP ***********************************************************************************************************************************************
2025-06-21 21:36:10,154 p=57885 u=trannhatsang n=ansible INFO| localhost                  : ok=8    changed=1    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2025-06-22 09:19:38,757 p=8050 u=trannhatsang n=ansible INFO| @all:
  |--@ungrouped:
  |--@local:
  |  |--localhost
2025-06-22 09:19:38,957 p=8056 u=trannhatsang n=ansible INFO| @all:
  |--@ungrouped:
  |--@local:
  |  |--localhost
2025-06-22 09:19:58,373 p=8966 u=trannhatsang n=ansible INFO| PLAY [Deploy Kafka Microservices to Kubernetes] ********************************************************************************************************
2025-06-22 09:19:58,378 p=8966 u=trannhatsang n=ansible WARNING| [WARNING]: Found variable using reserved name: environment

2025-06-22 09:19:58,378 p=8966 u=trannhatsang n=ansible INFO| TASK [Check if Docker is running] **********************************************************************************************************************
2025-06-22 09:19:58,835 p=8966 u=trannhatsang n=ansible WARNING| [WARNING]: Platform darwin on host localhost is using the discovered Python interpreter at /opt/homebrew/bin/python3.13, but future installation of
another Python interpreter could change the meaning of that path. See https://docs.ansible.com/ansible-
core/2.18/reference_appendices/interpreter_discovery.html for more information.

2025-06-22 09:19:58,835 p=8966 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 09:19:58,836 p=8966 u=trannhatsang n=ansible INFO| TASK [Fail if Docker is not running] *******************************************************************************************************************
2025-06-22 09:19:58,843 p=8966 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 09:19:58,844 p=8966 u=trannhatsang n=ansible INFO| TASK [Check if Minikube is running] ********************************************************************************************************************
2025-06-22 09:19:59,409 p=8966 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 09:19:59,410 p=8966 u=trannhatsang n=ansible INFO| TASK [Start Minikube if not running] *******************************************************************************************************************
2025-06-22 09:19:59,825 p=8966 u=trannhatsang n=ansible INFO| fatal: [localhost]: FAILED! => changed=true 
  cmd:
  - minikube
  - start
  - --memory=8192
  - --cpus=4
  - --disk-size=20g
  delta: '0:00:00.283511'
  end: '2025-06-22 09:19:59.808354'
  msg: non-zero return code
  rc: 14
  start: '2025-06-22 09:19:59.524843'
  stderr: 'X Exiting due to MK_USAGE: Docker Desktop has only 7844MB memory but you specified 8192MB'
  stderr_lines: <omitted>
  stdout: |-
    * minikube v1.36.0 on Darwin 13.7 (arm64)
    * Using the docker driver based on existing profile
  stdout_lines: <omitted>
2025-06-22 09:19:59,826 p=8966 u=trannhatsang n=ansible INFO| PLAY RECAP *********************************************************************************************************************************************
2025-06-22 09:19:59,826 p=8966 u=trannhatsang n=ansible INFO| localhost                  : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-22 09:24:18,181 p=12842 u=trannhatsang n=ansible INFO| PLAY [Deploy Kafka Microservices to Kubernetes] ********************************************************************************************************
2025-06-22 09:24:18,188 p=12842 u=trannhatsang n=ansible WARNING| [WARNING]: Found variable using reserved name: environment

2025-06-22 09:24:18,188 p=12842 u=trannhatsang n=ansible INFO| TASK [Check if Docker is running] **********************************************************************************************************************
2025-06-22 09:24:18,654 p=12842 u=trannhatsang n=ansible WARNING| [WARNING]: Platform darwin on host localhost is using the discovered Python interpreter at /opt/homebrew/bin/python3.13, but future installation of
another Python interpreter could change the meaning of that path. See https://docs.ansible.com/ansible-
core/2.18/reference_appendices/interpreter_discovery.html for more information.

2025-06-22 09:24:18,654 p=12842 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 09:24:18,656 p=12842 u=trannhatsang n=ansible INFO| TASK [Fail if Docker is not running] *******************************************************************************************************************
2025-06-22 09:24:18,662 p=12842 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 09:24:18,663 p=12842 u=trannhatsang n=ansible INFO| TASK [Check if Minikube is running] ********************************************************************************************************************
2025-06-22 09:24:19,259 p=12842 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 09:24:19,260 p=12842 u=trannhatsang n=ansible INFO| TASK [Start Minikube if not running] *******************************************************************************************************************
2025-06-22 09:24:19,266 p=12842 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 09:24:19,267 p=12842 u=trannhatsang n=ansible INFO| TASK [Wait for Minikube to be ready] *******************************************************************************************************************
2025-06-22 09:24:19,523 p=12842 u=trannhatsang n=ansible INFO| changed: [localhost]
2025-06-22 09:24:19,524 p=12842 u=trannhatsang n=ansible INFO| TASK [Get Minikube IP] *********************************************************************************************************************************
2025-06-22 09:24:19,780 p=12842 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 09:24:19,781 p=12842 u=trannhatsang n=ansible INFO| TASK [Set Minikube IP fact] ****************************************************************************************************************************
2025-06-22 09:24:19,788 p=12842 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 09:24:19,790 p=12842 u=trannhatsang n=ansible INFO| TASK [Configure Docker environment for Minikube] *******************************************************************************************************
2025-06-22 09:24:20,267 p=12842 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 09:24:20,268 p=12842 u=trannhatsang n=ansible INFO| TASK [Build Docker images] *****************************************************************************************************************************
2025-06-22 09:24:20,276 p=12842 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/build-images.yml for localhost
2025-06-22 09:24:20,277 p=12842 u=trannhatsang n=ansible INFO| TASK [Set Docker environment for Minikube] *************************************************************************************************************
2025-06-22 09:24:20,765 p=12842 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 09:24:20,766 p=12842 u=trannhatsang n=ansible INFO| TASK [Build Docker images for each service] ************************************************************************************************************
2025-06-22 09:24:50,294 p=12842 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 09:25:16,203 p=12842 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 09:25:40,183 p=12842 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 09:26:01,667 p=12842 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 09:26:01,673 p=12842 u=trannhatsang n=ansible INFO| TASK [Display build results] ***************************************************************************************************************************
2025-06-22 09:26:01,689 p=12842 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 551B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 2.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 7.09MB 1.6s done\n#5 DONE 1.8s\n\n#6 [ 4/10] COPY tsconfig.base.json ./\n#6 CACHED\n\n#7 [ 5/10] COPY nx.json ./\n#7 CACHED\n\n#8 [ 2/10] WORKDIR /app\n#8 CACHED\n\n#9 [ 3/10] COPY package*.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 9.8s\n\n#12 [ 8/10] RUN npx nx build order-gateway --prod\n#12 8.629 \n#12 8.629 > nx run order-gateway:build\n#12 8.629 \n#12 8.631 > webpack-cli build node-env=production\r\n#12 8.631 \r\n#12 9.964 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 10.9 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 9.964 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (90a16cdd476d09bd)\n#12 9.983 \n#12 9.983 \n#12 9.983 \n#12 9.983  NX   Successfully ran target build for project order-gateway\n#12 9.983 \n#12 9.984 \n#12 10.06 View logs and investigate cache misses at https://nx.app/runs/4TSW9T1fPH\n#12 10.06 \n#12 DONE 10.6s\n\n#13 [ 9/10] WORKDIR /app/apps/order-gateway/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.1s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 4.1s done\n#15 writing image sha256:57115d0a4bc3b477bb2ec5df4cbc060a2dc297e155436cf03a3782ea70666720 done\n#15 naming to docker.io/kafka-microservices/order-gateway:latest done\n#15 DONE 4.1s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/order-gateway/Dockerfile -t kafka-microservices/order-gateway:latest .\n', 'start': '2025-06-22 09:24:20.889341', 'end': '2025-06-22 09:24:50.268385', 'delta': '0:00:29.379044', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/order-gateway/Dockerfile -t kafka-microservices/order-gateway:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 551B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 2.1s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 7.09MB 1.6s done', '#5 DONE 1.8s', '', '#6 [ 4/10] COPY tsconfig.base.json ./', '#6 CACHED', '', '#7 [ 5/10] COPY nx.json ./', '#7 CACHED', '', '#8 [ 2/10] WORKDIR /app', '#8 CACHED', '', '#9 [ 3/10] COPY package*.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 9.8s', '', '#12 [ 8/10] RUN npx nx build order-gateway --prod', '#12 8.629 ', '#12 8.629 > nx run order-gateway:build', '#12 8.629 ', '#12 8.631 > webpack-cli build node-env=production', '#12 8.631 ', '#12 9.964 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 10.9 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 9.964 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (90a16cdd476d09bd)', '#12 9.983 ', '#12 9.983 ', '#12 9.983 ', '#12 9.983  NX   Successfully ran target build for project order-gateway', '#12 9.983 ', '#12 9.984 ', '#12 10.06 View logs and investigate cache misses at https://nx.app/runs/4TSW9T1fPH', '#12 10.06 ', '#12 DONE 10.6s', '', '#13 [ 9/10] WORKDIR /app/apps/order-gateway/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.1s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 4.1s done', '#15 writing image sha256:57115d0a4bc3b477bb2ec5df4cbc060a2dc297e155436cf03a3782ea70666720 done', '#15 naming to docker.io/kafka-microservices/order-gateway:latest done', '#15 DONE 4.1s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/order-gateway:latest'
2025-06-22 09:26:01,689 p=12842 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 538B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 1.0s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.65MB 0.8s done\n#5 DONE 0.9s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 6.9s\n\n#12 [ 8/10] RUN npx nx build order-service --prod\n#12 8.420 \n#12 8.420 > nx run order-service:build\n#12 8.420 \n#12 8.421 > webpack-cli build node-env=production\r\n#12 8.421 \r\n#12 11.42 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 12.6 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 11.42 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (2642429bc0250c36)\n#12 11.45 \n#12 11.45 \n#12 11.45 \n#12 11.45  NX   Successfully ran target build for project order-service\n#12 11.45 \n#12 11.45 \n#12 11.57 View logs and investigate cache misses at https://nx.app/runs/WLru1dWGRK\n#12 11.57 \n#12 DONE 12.2s\n\n#13 [ 9/10] WORKDIR /app/apps/order-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.2s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 3.5s done\n#15 writing image sha256:975e8bfb75b0f5e5b61edf30f338ab9dfeb31ed913ba6076fb1ec8ab6943e8b1 done\n#15 naming to docker.io/kafka-microservices/order-service:latest done\n#15 DONE 3.5s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/order-service/Dockerfile -t kafka-microservices/order-service:latest .\n', 'start': '2025-06-22 09:24:50.434840', 'end': '2025-06-22 09:25:16.178135', 'delta': '0:00:25.743295', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/order-service/Dockerfile -t kafka-microservices/order-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 538B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 1.0s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.65MB 0.8s done', '#5 DONE 0.9s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 6.9s', '', '#12 [ 8/10] RUN npx nx build order-service --prod', '#12 8.420 ', '#12 8.420 > nx run order-service:build', '#12 8.420 ', '#12 8.421 > webpack-cli build node-env=production', '#12 8.421 ', '#12 11.42 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 12.6 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 11.42 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (2642429bc0250c36)', '#12 11.45 ', '#12 11.45 ', '#12 11.45 ', '#12 11.45  NX   Successfully ran target build for project order-service', '#12 11.45 ', '#12 11.45 ', '#12 11.57 View logs and investigate cache misses at https://nx.app/runs/WLru1dWGRK', '#12 11.57 ', '#12 DONE 12.2s', '', '#13 [ 9/10] WORKDIR /app/apps/order-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.2s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 3.5s done', '#15 writing image sha256:975e8bfb75b0f5e5b61edf30f338ab9dfeb31ed913ba6076fb1ec8ab6943e8b1 done', '#15 naming to docker.io/kafka-microservices/order-service:latest done', '#15 DONE 3.5s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/order-service:latest'
2025-06-22 09:26:01,692 p=12842 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 559B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 1.0s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.65MB 0.9s done\n#5 DONE 0.9s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 6.9s\n\n#12 [ 8/10] RUN npx nx build notification-service --prod\n#12 9.270 \n#12 9.270 > nx run notification-service:build\n#12 9.270 \n#12 9.271 > webpack-cli build node-env=production\r\n#12 9.271 \r\n#12 10.47 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.35 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 10.47 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (75118f3463ae55fe)\n#12 10.49 \n#12 10.49 \n#12 10.49 \n#12 10.49  NX   Successfully ran target build for project notification-service\n#12 10.49 \n#12 10.49 \n#12 10.57 View logs and investigate cache misses at https://nx.app/runs/ECvmoRRd9g\n#12 10.57 \n#12 DONE 11.0s\n\n#13 [ 9/10] WORKDIR /app/apps/notification-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.1s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 3.1s done\n#15 writing image sha256:7172bf0864c01a4df9275301ba01a54cd028c150d2f6866e28ff9d4e7496ecc1 done\n#15 naming to docker.io/kafka-microservices/notification-service:latest done\n#15 DONE 3.1s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/notification-service/Dockerfile -t kafka-microservices/notification-service:latest .\n', 'start': '2025-06-22 09:25:16.356689', 'end': '2025-06-22 09:25:40.154448', 'delta': '0:00:23.797759', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/notification-service/Dockerfile -t kafka-microservices/notification-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 559B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 1.0s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.65MB 0.9s done', '#5 DONE 0.9s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 6.9s', '', '#12 [ 8/10] RUN npx nx build notification-service --prod', '#12 9.270 ', '#12 9.270 > nx run notification-service:build', '#12 9.270 ', '#12 9.271 > webpack-cli build node-env=production', '#12 9.271 ', '#12 10.47 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.35 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 10.47 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (75118f3463ae55fe)', '#12 10.49 ', '#12 10.49 ', '#12 10.49 ', '#12 10.49  NX   Successfully ran target build for project notification-service', '#12 10.49 ', '#12 10.49 ', '#12 10.57 View logs and investigate cache misses at https://nx.app/runs/ECvmoRRd9g', '#12 10.57 ', '#12 DONE 11.0s', '', '#13 [ 9/10] WORKDIR /app/apps/notification-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.1s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 3.1s done', '#15 writing image sha256:7172bf0864c01a4df9275301ba01a54cd028c150d2f6866e28ff9d4e7496ecc1 done', '#15 naming to docker.io/kafka-microservices/notification-service:latest done', '#15 DONE 3.1s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/notification-service:latest'
2025-06-22 09:26:01,696 p=12842 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 541B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 0.9s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.65MB 1.0s done\n#5 DONE 1.0s\n\n#6 [ 5/10] COPY nx.json ./\n#6 CACHED\n\n#7 [ 2/10] WORKDIR /app\n#7 CACHED\n\n#8 [ 3/10] COPY package*.json ./\n#8 CACHED\n\n#9 [ 4/10] COPY tsconfig.base.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 5.2s\n\n#12 [ 8/10] RUN npx nx build logger-service --prod\n#12 8.340 \n#12 8.340 > nx run logger-service:build\n#12 8.340 \n#12 8.342 > webpack-cli build node-env=production\r\n#12 8.342 \r\n#12 9.320 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.99 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 9.320 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (9c84d89542177468)\n#12 9.337 \n#12 9.337 \n#12 9.337 \n#12 9.337  NX   Successfully ran target build for project logger-service\n#12 9.337 \n#12 9.337 \n#12 9.406 View logs and investigate cache misses at https://nx.app/runs/dxErQT4wHl\n#12 9.406 \n#12 DONE 9.7s\n\n#13 [ 9/10] WORKDIR /app/apps/logger-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.1s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 3.5s done\n#15 writing image sha256:74946715be81e69152a1bd6aa9630101582c4c2a80aae896872e0001a51f79e9 done\n#15 naming to docker.io/kafka-microservices/logger-service:latest done\n#15 DONE 3.5s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/logger-service/Dockerfile -t kafka-microservices/logger-service:latest .\n', 'start': '2025-06-22 09:25:40.321314', 'end': '2025-06-22 09:26:01.642442', 'delta': '0:00:21.321128', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/logger-service/Dockerfile -t kafka-microservices/logger-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 541B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 0.9s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.65MB 1.0s done', '#5 DONE 1.0s', '', '#6 [ 5/10] COPY nx.json ./', '#6 CACHED', '', '#7 [ 2/10] WORKDIR /app', '#7 CACHED', '', '#8 [ 3/10] COPY package*.json ./', '#8 CACHED', '', '#9 [ 4/10] COPY tsconfig.base.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 5.2s', '', '#12 [ 8/10] RUN npx nx build logger-service --prod', '#12 8.340 ', '#12 8.340 > nx run logger-service:build', '#12 8.340 ', '#12 8.342 > webpack-cli build node-env=production', '#12 8.342 ', '#12 9.320 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.99 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 9.320 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (9c84d89542177468)', '#12 9.337 ', '#12 9.337 ', '#12 9.337 ', '#12 9.337  NX   Successfully ran target build for project logger-service', '#12 9.337 ', '#12 9.337 ', '#12 9.406 View logs and investigate cache misses at https://nx.app/runs/dxErQT4wHl', '#12 9.406 ', '#12 DONE 9.7s', '', '#13 [ 9/10] WORKDIR /app/apps/logger-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.1s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 3.5s done', '#15 writing image sha256:74946715be81e69152a1bd6aa9630101582c4c2a80aae896872e0001a51f79e9 done', '#15 naming to docker.io/kafka-microservices/logger-service:latest done', '#15 DONE 3.5s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/logger-service:latest'
2025-06-22 09:26:01,698 p=12842 u=trannhatsang n=ansible INFO| TASK [Deploy infrastructure] ***************************************************************************************************************************
2025-06-22 09:26:01,712 p=12842 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-infrastructure.yml for localhost
2025-06-22 09:26:01,716 p=12842 u=trannhatsang n=ansible INFO| TASK [Create namespace] ********************************************************************************************************************************
2025-06-22 09:26:02,096 p=12842 u=trannhatsang n=ansible INFO| fatal: [localhost]: FAILED! => changed=false 
  msg: Failed to import the required Python library (kubernetes) on MacOSs-MacBook-Pro.local's Python /opt/homebrew/opt/python@3.13/bin/python3.13. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter
2025-06-22 09:26:02,097 p=12842 u=trannhatsang n=ansible INFO| PLAY RECAP *********************************************************************************************************************************************
2025-06-22 09:26:02,097 p=12842 u=trannhatsang n=ansible INFO| localhost                  : ok=11   changed=2    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2025-06-22 10:00:02,686 p=39166 u=trannhatsang n=ansible INFO| PLAY [Deploy Kafka Microservices to Kubernetes] **************************************************************************************************
2025-06-22 10:00:02,692 p=39166 u=trannhatsang n=ansible WARNING| [WARNING]: Found variable using reserved name: environment

2025-06-22 10:00:02,692 p=39166 u=trannhatsang n=ansible INFO| TASK [Check if Docker is running] ****************************************************************************************************************
2025-06-22 10:00:03,157 p=39166 u=trannhatsang n=ansible WARNING| [WARNING]: Platform darwin on host localhost is using the discovered Python interpreter at /opt/homebrew/bin/python3.13, but future installation
of another Python interpreter could change the meaning of that path. See https://docs.ansible.com/ansible-
core/2.18/reference_appendices/interpreter_discovery.html for more information.

2025-06-22 10:00:03,158 p=39166 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:00:03,159 p=39166 u=trannhatsang n=ansible INFO| TASK [Fail if Docker is not running] *************************************************************************************************************
2025-06-22 10:00:03,165 p=39166 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 10:00:03,166 p=39166 u=trannhatsang n=ansible INFO| TASK [Check if Minikube is running] **************************************************************************************************************
2025-06-22 10:00:03,662 p=39166 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:00:03,663 p=39166 u=trannhatsang n=ansible INFO| TASK [Start Minikube if not running] *************************************************************************************************************
2025-06-22 10:00:03,670 p=39166 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 10:00:03,670 p=39166 u=trannhatsang n=ansible INFO| TASK [Wait for Minikube to be ready] *************************************************************************************************************
2025-06-22 10:00:03,877 p=39166 u=trannhatsang n=ansible INFO| changed: [localhost]
2025-06-22 10:00:03,878 p=39166 u=trannhatsang n=ansible INFO| TASK [Get Minikube IP] ***************************************************************************************************************************
2025-06-22 10:00:04,130 p=39166 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:00:04,131 p=39166 u=trannhatsang n=ansible INFO| TASK [Set Minikube IP fact] **********************************************************************************************************************
2025-06-22 10:00:04,138 p=39166 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:00:04,139 p=39166 u=trannhatsang n=ansible INFO| TASK [Configure Docker environment for Minikube] *************************************************************************************************
2025-06-22 10:00:04,661 p=39166 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:00:04,663 p=39166 u=trannhatsang n=ansible INFO| TASK [Build Docker images] ***********************************************************************************************************************
2025-06-22 10:00:04,670 p=39166 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/build-images.yml for localhost
2025-06-22 10:00:04,671 p=39166 u=trannhatsang n=ansible INFO| TASK [Set Docker environment for Minikube] *******************************************************************************************************
2025-06-22 10:00:05,151 p=39166 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:00:05,152 p=39166 u=trannhatsang n=ansible INFO| TASK [Build Docker images for each service] ******************************************************************************************************
2025-06-22 10:00:31,679 p=39166 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 10:00:58,663 p=39166 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 10:01:24,707 p=39166 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 10:01:53,412 p=39166 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 10:01:53,418 p=39166 u=trannhatsang n=ansible INFO| TASK [Display build results] *********************************************************************************************************************
2025-06-22 10:01:53,444 p=39166 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 551B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 2.3s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 7.60MB 1.3s done\n#5 DONE 1.3s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 6.8s\n\n#12 [ 8/10] RUN npx nx build order-gateway --prod\n#12 8.544 \n#12 8.544 > nx run order-gateway:build\n#12 8.544 \n#12 8.545 > webpack-cli build node-env=production\r\n#12 8.545 \r\n#12 9.731 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 10.9 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 9.731 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (90a16cdd476d09bd)\n#12 9.749 \n#12 9.749 \n#12 9.749 \n#12 9.749  NX   Successfully ran target build for project order-gateway\n#12 9.749 \n#12 9.749 \n#12 9.826 View logs and investigate cache misses at https://nx.app/runs/yq7igyNOAp\n#12 9.826 \n#12 DONE 10.2s\n\n#13 [ 9/10] WORKDIR /app/apps/order-gateway/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.1s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 4.7s done\n#15 writing image sha256:56a6f535768e6a7a93ac37ac4e3690453f4a08eb07c0569ca8ae61abc33c8123 done\n#15 naming to docker.io/kafka-microservices/order-gateway:latest done\n#15 DONE 4.7s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/order-gateway/Dockerfile -t kafka-microservices/order-gateway:latest .\n', 'start': '2025-06-22 10:00:05.268816', 'end': '2025-06-22 10:00:31.651832', 'delta': '0:00:26.383016', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/order-gateway/Dockerfile -t kafka-microservices/order-gateway:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 551B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 2.3s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 7.60MB 1.3s done', '#5 DONE 1.3s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 6.8s', '', '#12 [ 8/10] RUN npx nx build order-gateway --prod', '#12 8.544 ', '#12 8.544 > nx run order-gateway:build', '#12 8.544 ', '#12 8.545 > webpack-cli build node-env=production', '#12 8.545 ', '#12 9.731 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 10.9 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 9.731 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (90a16cdd476d09bd)', '#12 9.749 ', '#12 9.749 ', '#12 9.749 ', '#12 9.749  NX   Successfully ran target build for project order-gateway', '#12 9.749 ', '#12 9.749 ', '#12 9.826 View logs and investigate cache misses at https://nx.app/runs/yq7igyNOAp', '#12 9.826 ', '#12 DONE 10.2s', '', '#13 [ 9/10] WORKDIR /app/apps/order-gateway/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.1s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 4.7s done', '#15 writing image sha256:56a6f535768e6a7a93ac37ac4e3690453f4a08eb07c0569ca8ae61abc33c8123 done', '#15 naming to docker.io/kafka-microservices/order-gateway:latest done', '#15 DONE 4.7s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/order-gateway:latest'
2025-06-22 10:01:53,447 p=39166 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 538B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 0.9s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.68MB 0.9s done\n#5 DONE 0.9s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 6.7s\n\n#12 [ 8/10] RUN npx nx build order-service --prod\n#12 10.48 \n#12 10.48 > nx run order-service:build\n#12 10.48 \n#12 10.48 > webpack-cli build node-env=production\r\n#12 10.48 \r\n#12 11.88 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 12.6 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 11.88 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (2642429bc0250c36)\n#12 11.90 \n#12 11.90 \n#12 11.90 \n#12 11.90  NX   Successfully ran target build for project order-service\n#12 11.90 \n#12 11.90 \n#12 11.98 View logs and investigate cache misses at https://nx.app/runs/R6XuPvX2Qo\n#12 11.98 \n#12 DONE 12.5s\n\n#13 [ 9/10] WORKDIR /app/apps/order-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.2s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 4.8s done\n#15 writing image sha256:345dcfcdd8ca6a764c0fdb45af1c55da2836a21e787128caaf9698f2b099c6a8 done\n#15 naming to docker.io/kafka-microservices/order-service:latest done\n#15 DONE 4.8s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/order-service/Dockerfile -t kafka-microservices/order-service:latest .\n', 'start': '2025-06-22 10:00:31.814739', 'end': '2025-06-22 10:00:58.638996', 'delta': '0:00:26.824257', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/order-service/Dockerfile -t kafka-microservices/order-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 538B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 0.9s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.68MB 0.9s done', '#5 DONE 0.9s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 6.7s', '', '#12 [ 8/10] RUN npx nx build order-service --prod', '#12 10.48 ', '#12 10.48 > nx run order-service:build', '#12 10.48 ', '#12 10.48 > webpack-cli build node-env=production', '#12 10.48 ', '#12 11.88 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 12.6 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 11.88 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (2642429bc0250c36)', '#12 11.90 ', '#12 11.90 ', '#12 11.90 ', '#12 11.90  NX   Successfully ran target build for project order-service', '#12 11.90 ', '#12 11.90 ', '#12 11.98 View logs and investigate cache misses at https://nx.app/runs/R6XuPvX2Qo', '#12 11.98 ', '#12 DONE 12.5s', '', '#13 [ 9/10] WORKDIR /app/apps/order-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.2s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 4.8s done', '#15 writing image sha256:345dcfcdd8ca6a764c0fdb45af1c55da2836a21e787128caaf9698f2b099c6a8 done', '#15 naming to docker.io/kafka-microservices/order-service:latest done', '#15 DONE 4.8s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/order-service:latest'
2025-06-22 10:01:53,448 p=39166 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 559B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 1.0s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.68MB 1.3s done\n#5 DONE 1.3s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 7.7s\n\n#12 [ 8/10] RUN npx nx build notification-service --prod\n#12 8.572 \n#12 8.572 > nx run notification-service:build\n#12 8.572 \n#12 8.572 > webpack-cli build node-env=production\r\n#12 8.572 \r\n#12 9.788 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.35 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 9.788 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (75118f3463ae55fe)\n#12 9.805 \n#12 9.805 \n#12 9.805 \n#12 9.805  NX   Successfully ran target build for project notification-service\n#12 9.805 \n#12 9.805 \n#12 9.884 View logs and investigate cache misses at https://nx.app/runs/YrHdaQizsj\n#12 9.884 \n#12 DONE 10.2s\n\n#13 [ 9/10] WORKDIR /app/apps/notification-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.2s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 4.7s done\n#15 writing image sha256:8b2d122ba9970d4d780e89c1f1daadd95ffbe844af0f3c988cf67efda06e2600 done\n#15 naming to docker.io/kafka-microservices/notification-service:latest done\n#15 DONE 4.7s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/notification-service/Dockerfile -t kafka-microservices/notification-service:latest .\n', 'start': '2025-06-22 10:00:58.802817', 'end': '2025-06-22 10:01:24.683312', 'delta': '0:00:25.880495', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/notification-service/Dockerfile -t kafka-microservices/notification-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 559B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 1.0s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.68MB 1.3s done', '#5 DONE 1.3s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 7.7s', '', '#12 [ 8/10] RUN npx nx build notification-service --prod', '#12 8.572 ', '#12 8.572 > nx run notification-service:build', '#12 8.572 ', '#12 8.572 > webpack-cli build node-env=production', '#12 8.572 ', '#12 9.788 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.35 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 9.788 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (75118f3463ae55fe)', '#12 9.805 ', '#12 9.805 ', '#12 9.805 ', '#12 9.805  NX   Successfully ran target build for project notification-service', '#12 9.805 ', '#12 9.805 ', '#12 9.884 View logs and investigate cache misses at https://nx.app/runs/YrHdaQizsj', '#12 9.884 ', '#12 DONE 10.2s', '', '#13 [ 9/10] WORKDIR /app/apps/notification-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.2s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 4.7s done', '#15 writing image sha256:8b2d122ba9970d4d780e89c1f1daadd95ffbe844af0f3c988cf67efda06e2600 done', '#15 naming to docker.io/kafka-microservices/notification-service:latest done', '#15 DONE 4.7s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/notification-service:latest'
2025-06-22 10:01:53,452 p=39166 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 541B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 1.0s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.68MB 0.9s done\n#5 DONE 0.9s\n\n#6 [ 5/10] COPY nx.json ./\n#6 CACHED\n\n#7 [ 2/10] WORKDIR /app\n#7 CACHED\n\n#8 [ 3/10] COPY package*.json ./\n#8 CACHED\n\n#9 [ 4/10] COPY tsconfig.base.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 8.8s\n\n#12 [ 8/10] RUN npx nx build logger-service --prod\n#12 10.03 \n#12 10.03 > nx run logger-service:build\n#12 10.03 \n#12 10.03 > webpack-cli build node-env=production\r\n#12 10.03 \r\n#12 11.33 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.99 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 11.33 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (9c84d89542177468)\n#12 11.35 \n#12 11.35 \n#12 11.35 \n#12 11.35  NX   Successfully ran target build for project logger-service\n#12 11.35 \n#12 11.35 \n#12 11.43 View logs and investigate cache misses at https://nx.app/runs/TEKO6aDgSX\n#12 11.43 \n#12 DONE 11.9s\n\n#13 [ 9/10] WORKDIR /app/apps/logger-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.2s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 4.9s done\n#15 writing image sha256:d42ee2a03d682dae3cc84596add3d7d718e87eb9a62e25b5e7f18f75efbba721 done\n#15 naming to docker.io/kafka-microservices/logger-service:latest done\n#15 DONE 5.0s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/logger-service/Dockerfile -t kafka-microservices/logger-service:latest .\n', 'start': '2025-06-22 10:01:24.847477', 'end': '2025-06-22 10:01:53.388316', 'delta': '0:00:28.540839', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/logger-service/Dockerfile -t kafka-microservices/logger-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 541B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 1.0s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.68MB 0.9s done', '#5 DONE 0.9s', '', '#6 [ 5/10] COPY nx.json ./', '#6 CACHED', '', '#7 [ 2/10] WORKDIR /app', '#7 CACHED', '', '#8 [ 3/10] COPY package*.json ./', '#8 CACHED', '', '#9 [ 4/10] COPY tsconfig.base.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 8.8s', '', '#12 [ 8/10] RUN npx nx build logger-service --prod', '#12 10.03 ', '#12 10.03 > nx run logger-service:build', '#12 10.03 ', '#12 10.03 > webpack-cli build node-env=production', '#12 10.03 ', '#12 11.33 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.99 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 11.33 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (9c84d89542177468)', '#12 11.35 ', '#12 11.35 ', '#12 11.35 ', '#12 11.35  NX   Successfully ran target build for project logger-service', '#12 11.35 ', '#12 11.35 ', '#12 11.43 View logs and investigate cache misses at https://nx.app/runs/TEKO6aDgSX', '#12 11.43 ', '#12 DONE 11.9s', '', '#13 [ 9/10] WORKDIR /app/apps/logger-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.2s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 4.9s done', '#15 writing image sha256:d42ee2a03d682dae3cc84596add3d7d718e87eb9a62e25b5e7f18f75efbba721 done', '#15 naming to docker.io/kafka-microservices/logger-service:latest done', '#15 DONE 5.0s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/logger-service:latest'
2025-06-22 10:01:53,456 p=39166 u=trannhatsang n=ansible INFO| TASK [Deploy infrastructure] *********************************************************************************************************************
2025-06-22 10:01:53,476 p=39166 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-infrastructure.yml for localhost
2025-06-22 10:01:53,480 p=39166 u=trannhatsang n=ansible INFO| TASK [Create namespace] **************************************************************************************************************************
2025-06-22 10:01:53,819 p=39166 u=trannhatsang n=ansible INFO| fatal: [localhost]: FAILED! => changed=false 
  msg: Failed to import the required Python library (kubernetes) on MacOSs-MacBook-Pro.local's Python /opt/homebrew/opt/python@3.13/bin/python3.13. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter
2025-06-22 10:01:53,820 p=39166 u=trannhatsang n=ansible INFO| PLAY RECAP ***************************************************************************************************************************************
2025-06-22 10:01:53,820 p=39166 u=trannhatsang n=ansible INFO| localhost                  : ok=11   changed=2    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2025-06-22 10:16:52,078 p=52737 u=trannhatsang n=ansible INFO| PLAY [Deploy Kafka Microservices to Kubernetes] ***************************************************************************************************
2025-06-22 10:16:52,086 p=52737 u=trannhatsang n=ansible WARNING| [WARNING]: Found variable using reserved name: environment

2025-06-22 10:16:52,086 p=52737 u=trannhatsang n=ansible INFO| TASK [Check if Docker is running] *****************************************************************************************************************
2025-06-22 10:16:52,618 p=52737 u=trannhatsang n=ansible WARNING| [WARNING]: Platform darwin on host localhost is using the discovered Python interpreter at /opt/homebrew/bin/python3.13, but future installation
of another Python interpreter could change the meaning of that path. See https://docs.ansible.com/ansible-
core/2.18/reference_appendices/interpreter_discovery.html for more information.

2025-06-22 10:16:52,618 p=52737 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:16:52,620 p=52737 u=trannhatsang n=ansible INFO| TASK [Fail if Docker is not running] **************************************************************************************************************
2025-06-22 10:16:52,626 p=52737 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 10:16:52,627 p=52737 u=trannhatsang n=ansible INFO| TASK [Check if Minikube is running] ***************************************************************************************************************
2025-06-22 10:16:53,316 p=52737 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:16:53,317 p=52737 u=trannhatsang n=ansible INFO| TASK [Start Minikube if not running] **************************************************************************************************************
2025-06-22 10:16:53,325 p=52737 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 10:16:53,326 p=52737 u=trannhatsang n=ansible INFO| TASK [Wait for Minikube to be ready] **************************************************************************************************************
2025-06-22 10:16:53,594 p=52737 u=trannhatsang n=ansible INFO| changed: [localhost]
2025-06-22 10:16:53,595 p=52737 u=trannhatsang n=ansible INFO| TASK [Get Minikube IP] ****************************************************************************************************************************
2025-06-22 10:16:53,875 p=52737 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:16:53,876 p=52737 u=trannhatsang n=ansible INFO| TASK [Set Minikube IP fact] ***********************************************************************************************************************
2025-06-22 10:16:53,885 p=52737 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:16:53,886 p=52737 u=trannhatsang n=ansible INFO| TASK [Configure Docker environment for Minikube] **************************************************************************************************
2025-06-22 10:16:54,446 p=52737 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:16:54,447 p=52737 u=trannhatsang n=ansible INFO| TASK [Build Docker images] ************************************************************************************************************************
2025-06-22 10:16:54,455 p=52737 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/build-images.yml for localhost
2025-06-22 10:16:54,456 p=52737 u=trannhatsang n=ansible INFO| TASK [Set Docker environment for Minikube] ********************************************************************************************************
2025-06-22 10:16:54,994 p=52737 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:16:54,995 p=52737 u=trannhatsang n=ansible INFO| TASK [Build Docker images for each service] *******************************************************************************************************
2025-06-22 10:17:37,073 p=52737 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 10:18:08,573 p=52737 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 10:18:38,134 p=52737 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 10:19:12,552 p=52737 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 10:19:12,558 p=52737 u=trannhatsang n=ansible INFO| TASK [Display build results] **********************************************************************************************************************
2025-06-22 10:19:12,581 p=52737 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 551B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 2.2s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 7.45MB 1.4s done\n#5 DONE 1.4s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 16.9s\n\n#12 [ 8/10] RUN npx nx build order-gateway --prod\n#12 12.71 \n#12 12.71 > nx run order-gateway:build\n#12 12.71 \n#12 12.71 > webpack-cli build node-env=production\r\n#12 12.71 \r\n#12 14.54 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 10.9 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 14.54 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (90a16cdd476d09bd)\n#12 14.58 \n#12 14.58 \n#12 14.58 \n#12 14.58  NX   Successfully ran target build for project order-gateway\n#12 14.58 \n#12 14.58 \n#12 14.66 View logs and investigate cache misses at https://nx.app/runs/vIAm64Eyen\n#12 14.66 \n#12 DONE 15.5s\n\n#13 [ 9/10] WORKDIR /app/apps/order-gateway/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.2s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 4.8s done\n#15 writing image sha256:15b58846e415ce011d59000b9c86089d567df1c249fdad25d5e8c433d954f846 done\n#15 naming to docker.io/kafka-microservices/order-gateway:latest done\n#15 DONE 4.8s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/order-gateway/Dockerfile -t kafka-microservices/order-gateway:latest .\n', 'start': '2025-06-22 10:16:55.129398', 'end': '2025-06-22 10:17:37.042350', 'delta': '0:00:41.912952', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/order-gateway/Dockerfile -t kafka-microservices/order-gateway:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 551B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 2.2s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 7.45MB 1.4s done', '#5 DONE 1.4s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 16.9s', '', '#12 [ 8/10] RUN npx nx build order-gateway --prod', '#12 12.71 ', '#12 12.71 > nx run order-gateway:build', '#12 12.71 ', '#12 12.71 > webpack-cli build node-env=production', '#12 12.71 ', '#12 14.54 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 10.9 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 14.54 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (90a16cdd476d09bd)', '#12 14.58 ', '#12 14.58 ', '#12 14.58 ', '#12 14.58  NX   Successfully ran target build for project order-gateway', '#12 14.58 ', '#12 14.58 ', '#12 14.66 View logs and investigate cache misses at https://nx.app/runs/vIAm64Eyen', '#12 14.66 ', '#12 DONE 15.5s', '', '#13 [ 9/10] WORKDIR /app/apps/order-gateway/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.2s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 4.8s done', '#15 writing image sha256:15b58846e415ce011d59000b9c86089d567df1c249fdad25d5e8c433d954f846 done', '#15 naming to docker.io/kafka-microservices/order-gateway:latest done', '#15 DONE 4.8s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/order-gateway:latest'
2025-06-22 10:19:12,584 p=52737 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 538B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 1.0s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B 0.0s done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.71MB 1.2s done\n#5 DONE 1.2s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 9.7s\n\n#12 [ 8/10] RUN npx nx build order-service --prod\n#12 11.30 \n#12 11.30 > nx run order-service:build\n#12 11.30 \n#12 11.30 > webpack-cli build node-env=production\r\n#12 11.30 \r\n#12 12.77 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 12.6 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 12.77 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (2642429bc0250c36)\n#12 12.79 \n#12 12.79 \n#12 12.79 \n#12 12.79  NX   Successfully ran target build for project order-service\n#12 12.79 \n#12 12.79 \n#12 12.87 View logs and investigate cache misses at https://nx.app/runs/YoIyj7G5I2\n#12 12.87 \n#12 DONE 13.3s\n\n#13 [ 9/10] WORKDIR /app/apps/order-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.2s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 5.0s done\n#15 writing image sha256:e6a972a8458e1f1cf40da867bd4b33534e8a90201ea9d7419b1dc25eece53b8a done\n#15 naming to docker.io/kafka-microservices/order-service:latest done\n#15 DONE 5.1s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/order-service/Dockerfile -t kafka-microservices/order-service:latest .\n', 'start': '2025-06-22 10:17:37.214961', 'end': '2025-06-22 10:18:08.546626', 'delta': '0:00:31.331665', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/order-service/Dockerfile -t kafka-microservices/order-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 538B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 1.0s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B 0.0s done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.71MB 1.2s done', '#5 DONE 1.2s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 9.7s', '', '#12 [ 8/10] RUN npx nx build order-service --prod', '#12 11.30 ', '#12 11.30 > nx run order-service:build', '#12 11.30 ', '#12 11.30 > webpack-cli build node-env=production', '#12 11.30 ', '#12 12.77 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 12.6 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 12.77 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (2642429bc0250c36)', '#12 12.79 ', '#12 12.79 ', '#12 12.79 ', '#12 12.79  NX   Successfully ran target build for project order-service', '#12 12.79 ', '#12 12.79 ', '#12 12.87 View logs and investigate cache misses at https://nx.app/runs/YoIyj7G5I2', '#12 12.87 ', '#12 DONE 13.3s', '', '#13 [ 9/10] WORKDIR /app/apps/order-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.2s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 5.0s done', '#15 writing image sha256:e6a972a8458e1f1cf40da867bd4b33534e8a90201ea9d7419b1dc25eece53b8a done', '#15 naming to docker.io/kafka-microservices/order-service:latest done', '#15 DONE 5.1s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/order-service:latest'
2025-06-22 10:19:12,596 p=52737 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 DONE 0.0s\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 559B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 1.0s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.71MB 1.2s done\n#5 DONE 1.2s\n\n#6 [ 3/10] COPY package*.json ./\n#6 CACHED\n\n#7 [ 4/10] COPY tsconfig.base.json ./\n#7 CACHED\n\n#8 [ 5/10] COPY nx.json ./\n#8 CACHED\n\n#9 [ 2/10] WORKDIR /app\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 8.0s\n\n#12 [ 8/10] RUN npx nx build notification-service --prod\n#12 10.56 \n#12 10.56 > nx run notification-service:build\n#12 10.56 \n#12 10.57 > webpack-cli build node-env=production\r\n#12 10.57 \r\n#12 11.93 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.35 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 11.93 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (75118f3463ae55fe)\n#12 11.95 \n#12 11.95 \n#12 11.95 \n#12 11.95  NX   Successfully ran target build for project notification-service\n#12 11.95 \n#12 11.95 \n#12 12.03 View logs and investigate cache misses at https://nx.app/runs/huAw8BD4ii\n#12 12.03 \n#12 DONE 12.5s\n\n#13 [ 9/10] WORKDIR /app/apps/notification-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.2s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 5.6s done\n#15 writing image sha256:bf22451d3d7f7bf22ffa2d862e8cf694e59dc3f26040ef2bf9d23b8ea2ee2f9d done\n#15 naming to docker.io/kafka-microservices/notification-service:latest done\n#15 DONE 5.6s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/notification-service/Dockerfile -t kafka-microservices/notification-service:latest .\n', 'start': '2025-06-22 10:18:08.719611', 'end': '2025-06-22 10:18:38.108319', 'delta': '0:00:29.388708', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/notification-service/Dockerfile -t kafka-microservices/notification-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 DONE 0.0s', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 559B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 1.0s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.71MB 1.2s done', '#5 DONE 1.2s', '', '#6 [ 3/10] COPY package*.json ./', '#6 CACHED', '', '#7 [ 4/10] COPY tsconfig.base.json ./', '#7 CACHED', '', '#8 [ 5/10] COPY nx.json ./', '#8 CACHED', '', '#9 [ 2/10] WORKDIR /app', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 8.0s', '', '#12 [ 8/10] RUN npx nx build notification-service --prod', '#12 10.56 ', '#12 10.56 > nx run notification-service:build', '#12 10.56 ', '#12 10.57 > webpack-cli build node-env=production', '#12 10.57 ', '#12 11.93 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.35 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 11.93 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (75118f3463ae55fe)', '#12 11.95 ', '#12 11.95 ', '#12 11.95 ', '#12 11.95  NX   Successfully ran target build for project notification-service', '#12 11.95 ', '#12 11.95 ', '#12 12.03 View logs and investigate cache misses at https://nx.app/runs/huAw8BD4ii', '#12 12.03 ', '#12 DONE 12.5s', '', '#13 [ 9/10] WORKDIR /app/apps/notification-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.2s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 5.6s done', '#15 writing image sha256:bf22451d3d7f7bf22ffa2d862e8cf694e59dc3f26040ef2bf9d23b8ea2ee2f9d done', '#15 naming to docker.io/kafka-microservices/notification-service:latest done', '#15 DONE 5.6s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/notification-service:latest'
2025-06-22 10:19:12,599 p=52737 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 541B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 1.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.71MB 1.3s done\n#5 DONE 1.3s\n\n#6 [ 5/10] COPY nx.json ./\n#6 CACHED\n\n#7 [ 2/10] WORKDIR /app\n#7 CACHED\n\n#8 [ 3/10] COPY package*.json ./\n#8 CACHED\n\n#9 [ 4/10] COPY tsconfig.base.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 12.0s\n\n#12 [ 8/10] RUN npx nx build logger-service --prod\n#12 11.64 \n#12 11.64 > nx run logger-service:build\n#12 11.64 \n#12 11.64 > webpack-cli build node-env=production\r\n#12 11.64 \r\n#12 12.92 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.99 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 12.92 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (9c84d89542177468)\n#12 12.94 \n#12 12.94 \n#12 12.94 \n#12 12.94  NX   Successfully ran target build for project logger-service\n#12 12.94 \n#12 12.94 \n#12 13.09 View logs and investigate cache misses at https://nx.app/runs/PH94SGieSd\n#12 13.09 \n#12 DONE 13.6s\n\n#13 [ 9/10] WORKDIR /app/apps/logger-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.2s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 5.2s done\n#15 writing image sha256:5dafd75a4755881bdd43e59cf09ba9862f32d012bdae5405245861361d777e46 done\n#15 naming to docker.io/kafka-microservices/logger-service:latest done\n#15 DONE 5.2s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/logger-service/Dockerfile -t kafka-microservices/logger-service:latest .\n', 'start': '2025-06-22 10:18:38.278820', 'end': '2025-06-22 10:19:12.525243', 'delta': '0:00:34.246423', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/logger-service/Dockerfile -t kafka-microservices/logger-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 541B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 1.1s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.71MB 1.3s done', '#5 DONE 1.3s', '', '#6 [ 5/10] COPY nx.json ./', '#6 CACHED', '', '#7 [ 2/10] WORKDIR /app', '#7 CACHED', '', '#8 [ 3/10] COPY package*.json ./', '#8 CACHED', '', '#9 [ 4/10] COPY tsconfig.base.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 12.0s', '', '#12 [ 8/10] RUN npx nx build logger-service --prod', '#12 11.64 ', '#12 11.64 > nx run logger-service:build', '#12 11.64 ', '#12 11.64 > webpack-cli build node-env=production', '#12 11.64 ', '#12 12.92 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.99 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 12.92 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (9c84d89542177468)', '#12 12.94 ', '#12 12.94 ', '#12 12.94 ', '#12 12.94  NX   Successfully ran target build for project logger-service', '#12 12.94 ', '#12 12.94 ', '#12 13.09 View logs and investigate cache misses at https://nx.app/runs/PH94SGieSd', '#12 13.09 ', '#12 DONE 13.6s', '', '#13 [ 9/10] WORKDIR /app/apps/logger-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.2s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 5.2s done', '#15 writing image sha256:5dafd75a4755881bdd43e59cf09ba9862f32d012bdae5405245861361d777e46 done', '#15 naming to docker.io/kafka-microservices/logger-service:latest done', '#15 DONE 5.2s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/logger-service:latest'
2025-06-22 10:19:12,605 p=52737 u=trannhatsang n=ansible INFO| TASK [Deploy infrastructure] **********************************************************************************************************************
2025-06-22 10:19:12,630 p=52737 u=trannhatsang n=ansible ERROR| ERROR! 'kubernetes.core.k8s' is not a valid attribute for a Block

The error appears to be in '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-infrastructure.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: Create namespace
  ^ here

2025-06-22 10:51:44,098 p=86091 u=trannhatsang n=ansible INFO| PLAY [Deploy Kafka Microservices to Kubernetes] *****************************************************************************************************************************
2025-06-22 10:51:44,105 p=86091 u=trannhatsang n=ansible WARNING| [WARNING]: Found variable using reserved name: environment

2025-06-22 10:51:44,105 p=86091 u=trannhatsang n=ansible INFO| TASK [Check if Docker is running] *******************************************************************************************************************************************
2025-06-22 10:51:44,560 p=86091 u=trannhatsang n=ansible WARNING| [WARNING]: Platform darwin on host localhost is using the discovered Python interpreter at /opt/homebrew/bin/python3.13, but future installation of another Python
interpreter could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.18/reference_appendices/interpreter_discovery.html for more information.

2025-06-22 10:51:44,560 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:51:44,561 p=86091 u=trannhatsang n=ansible INFO| TASK [Fail if Docker is not running] ****************************************************************************************************************************************
2025-06-22 10:51:44,567 p=86091 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 10:51:44,568 p=86091 u=trannhatsang n=ansible INFO| TASK [Check if Minikube is running] *****************************************************************************************************************************************
2025-06-22 10:51:45,212 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:51:45,213 p=86091 u=trannhatsang n=ansible INFO| TASK [Start Minikube if not running] ****************************************************************************************************************************************
2025-06-22 10:51:45,220 p=86091 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 10:51:45,220 p=86091 u=trannhatsang n=ansible INFO| TASK [Wait for Minikube to be ready] ****************************************************************************************************************************************
2025-06-22 10:51:45,470 p=86091 u=trannhatsang n=ansible INFO| changed: [localhost]
2025-06-22 10:51:45,471 p=86091 u=trannhatsang n=ansible INFO| TASK [Get Minikube IP] ******************************************************************************************************************************************************
2025-06-22 10:51:45,743 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:51:45,744 p=86091 u=trannhatsang n=ansible INFO| TASK [Set Minikube IP fact] *************************************************************************************************************************************************
2025-06-22 10:51:45,751 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:51:45,752 p=86091 u=trannhatsang n=ansible INFO| TASK [Configure Docker environment for Minikube] ****************************************************************************************************************************
2025-06-22 10:51:46,295 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:51:46,296 p=86091 u=trannhatsang n=ansible INFO| TASK [Build Docker images] **************************************************************************************************************************************************
2025-06-22 10:51:46,304 p=86091 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/build-images.yml for localhost
2025-06-22 10:51:46,305 p=86091 u=trannhatsang n=ansible INFO| TASK [Set Docker environment for Minikube] **********************************************************************************************************************************
2025-06-22 10:51:46,795 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:51:46,796 p=86091 u=trannhatsang n=ansible INFO| TASK [Build Docker images for each service] *********************************************************************************************************************************
2025-06-22 10:52:24,980 p=86091 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 10:52:57,782 p=86091 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 10:53:29,853 p=86091 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 10:54:04,476 p=86091 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 10:54:04,482 p=86091 u=trannhatsang n=ansible INFO| TASK [Display build results] ************************************************************************************************************************************************
2025-06-22 10:54:04,499 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 551B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 2.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 7.49MB 1.3s done\n#5 DONE 1.4s\n\n#6 [ 4/10] COPY tsconfig.base.json ./\n#6 CACHED\n\n#7 [ 5/10] COPY nx.json ./\n#7 CACHED\n\n#8 [ 2/10] WORKDIR /app\n#8 CACHED\n\n#9 [ 3/10] COPY package*.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 11.8s\n\n#12 [ 8/10] RUN npx nx build order-gateway --prod\n#12 13.20 \n#12 13.20 > nx run order-gateway:build\n#12 13.20 \n#12 13.20 > webpack-cli build node-env=production\r\n#12 13.20 \r\n#12 14.80 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 10.9 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 14.80 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (90a16cdd476d09bd)\n#12 14.82 \n#12 14.82 \n#12 14.82 \n#12 14.82  NX   Successfully ran target build for project order-gateway\n#12 14.82 \n#12 14.83 \n#12 14.92 View logs and investigate cache misses at https://nx.app/runs/5jwLW80DZd\n#12 14.92 \n#12 DONE 15.7s\n\n#13 [ 9/10] WORKDIR /app/apps/order-gateway/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.3s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 5.4s done\n#15 writing image sha256:6b3df008003bf833ebb6655dc917bc01ebfe109500effcfe3805e6cef9b253e1 done\n#15 naming to docker.io/kafka-microservices/order-gateway:latest done\n#15 DONE 5.4s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/order-gateway/Dockerfile -t kafka-microservices/order-gateway:latest .\n', 'start': '2025-06-22 10:51:46.918320', 'end': '2025-06-22 10:52:24.953409', 'delta': '0:00:38.035089', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/order-gateway/Dockerfile -t kafka-microservices/order-gateway:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 551B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 2.1s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 7.49MB 1.3s done', '#5 DONE 1.4s', '', '#6 [ 4/10] COPY tsconfig.base.json ./', '#6 CACHED', '', '#7 [ 5/10] COPY nx.json ./', '#7 CACHED', '', '#8 [ 2/10] WORKDIR /app', '#8 CACHED', '', '#9 [ 3/10] COPY package*.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 11.8s', '', '#12 [ 8/10] RUN npx nx build order-gateway --prod', '#12 13.20 ', '#12 13.20 > nx run order-gateway:build', '#12 13.20 ', '#12 13.20 > webpack-cli build node-env=production', '#12 13.20 ', '#12 14.80 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 10.9 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 14.80 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (90a16cdd476d09bd)', '#12 14.82 ', '#12 14.82 ', '#12 14.82 ', '#12 14.82  NX   Successfully ran target build for project order-gateway', '#12 14.82 ', '#12 14.83 ', '#12 14.92 View logs and investigate cache misses at https://nx.app/runs/5jwLW80DZd', '#12 14.92 ', '#12 DONE 15.7s', '', '#13 [ 9/10] WORKDIR /app/apps/order-gateway/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.3s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 5.4s done', '#15 writing image sha256:6b3df008003bf833ebb6655dc917bc01ebfe109500effcfe3805e6cef9b253e1 done', '#15 naming to docker.io/kafka-microservices/order-gateway:latest done', '#15 DONE 5.4s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/order-gateway:latest'
2025-06-22 10:54:04,500 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 538B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 1.0s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.74MB 1.2s done\n#5 DONE 1.2s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 9.8s\n\n#12 [ 8/10] RUN npx nx build order-service --prod\n#12 12.04 \n#12 12.04 > nx run order-service:build\n#12 12.04 \n#12 12.05 > webpack-cli build node-env=production\r\n#12 12.05 \r\n#12 13.60 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 12.6 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 13.60 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (2642429bc0250c36)\n#12 13.62 \n#12 13.62 \n#12 13.62 \n#12 13.62  NX   Successfully ran target build for project order-service\n#12 13.62 \n#12 13.62 \n#12 13.71 View logs and investigate cache misses at https://nx.app/runs/SM541cbuoa\n#12 13.71 \n#12 DONE 14.4s\n\n#13 [ 9/10] WORKDIR /app/apps/order-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.2s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 5.1s done\n#15 writing image sha256:979fb6cc83df4d096e22f6f18593b1c74846fd10701b7012039071316afde45d done\n#15 naming to docker.io/kafka-microservices/order-service:latest done\n#15 DONE 5.1s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/order-service/Dockerfile -t kafka-microservices/order-service:latest .\n', 'start': '2025-06-22 10:52:25.151645', 'end': '2025-06-22 10:52:57.755319', 'delta': '0:00:32.603674', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/order-service/Dockerfile -t kafka-microservices/order-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 538B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 1.0s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.74MB 1.2s done', '#5 DONE 1.2s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 9.8s', '', '#12 [ 8/10] RUN npx nx build order-service --prod', '#12 12.04 ', '#12 12.04 > nx run order-service:build', '#12 12.04 ', '#12 12.05 > webpack-cli build node-env=production', '#12 12.05 ', '#12 13.60 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 12.6 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 13.60 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (2642429bc0250c36)', '#12 13.62 ', '#12 13.62 ', '#12 13.62 ', '#12 13.62  NX   Successfully ran target build for project order-service', '#12 13.62 ', '#12 13.62 ', '#12 13.71 View logs and investigate cache misses at https://nx.app/runs/SM541cbuoa', '#12 13.71 ', '#12 DONE 14.4s', '', '#13 [ 9/10] WORKDIR /app/apps/order-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.2s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 5.1s done', '#15 writing image sha256:979fb6cc83df4d096e22f6f18593b1c74846fd10701b7012039071316afde45d done', '#15 naming to docker.io/kafka-microservices/order-service:latest done', '#15 DONE 5.1s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/order-service:latest'
2025-06-22 10:54:04,502 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 559B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 1.0s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.74MB 1.4s done\n#5 DONE 1.4s\n\n#6 [ 3/10] COPY package*.json ./\n#6 CACHED\n\n#7 [ 4/10] COPY tsconfig.base.json ./\n#7 CACHED\n\n#8 [ 5/10] COPY nx.json ./\n#8 CACHED\n\n#9 [ 2/10] WORKDIR /app\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 9.9s\n\n#12 [ 8/10] RUN npx nx build notification-service --prod\n#12 11.12 \n#12 11.12 > nx run notification-service:build\n#12 11.12 \n#12 11.13 > webpack-cli build node-env=production\r\n#12 11.13 \r\n#12 12.43 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.35 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 12.43 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (75118f3463ae55fe)\n#12 12.45 \n#12 12.45 \n#12 12.45 \n#12 12.45  NX   Successfully ran target build for project notification-service\n#12 12.45 \n#12 12.45 \n#12 12.53 View logs and investigate cache misses at https://nx.app/runs/UJTMakzTyS\n#12 12.53 \n#12 DONE 13.0s\n\n#13 [ 9/10] WORKDIR /app/apps/notification-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.2s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 5.5s done\n#15 writing image sha256:c563bb7d36ab0e48b0def73bfcf014c00ce38f9cc1bb7a94216c44ec14d91063 done\n#15 naming to docker.io/kafka-microservices/notification-service:latest done\n#15 DONE 5.6s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/notification-service/Dockerfile -t kafka-microservices/notification-service:latest .\n', 'start': '2025-06-22 10:52:57.925557', 'end': '2025-06-22 10:53:29.826016', 'delta': '0:00:31.900459', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/notification-service/Dockerfile -t kafka-microservices/notification-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 559B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 1.0s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.74MB 1.4s done', '#5 DONE 1.4s', '', '#6 [ 3/10] COPY package*.json ./', '#6 CACHED', '', '#7 [ 4/10] COPY tsconfig.base.json ./', '#7 CACHED', '', '#8 [ 5/10] COPY nx.json ./', '#8 CACHED', '', '#9 [ 2/10] WORKDIR /app', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 9.9s', '', '#12 [ 8/10] RUN npx nx build notification-service --prod', '#12 11.12 ', '#12 11.12 > nx run notification-service:build', '#12 11.12 ', '#12 11.13 > webpack-cli build node-env=production', '#12 11.13 ', '#12 12.43 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.35 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 12.43 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (75118f3463ae55fe)', '#12 12.45 ', '#12 12.45 ', '#12 12.45 ', '#12 12.45  NX   Successfully ran target build for project notification-service', '#12 12.45 ', '#12 12.45 ', '#12 12.53 View logs and investigate cache misses at https://nx.app/runs/UJTMakzTyS', '#12 12.53 ', '#12 DONE 13.0s', '', '#13 [ 9/10] WORKDIR /app/apps/notification-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.2s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 5.5s done', '#15 writing image sha256:c563bb7d36ab0e48b0def73bfcf014c00ce38f9cc1bb7a94216c44ec14d91063 done', '#15 naming to docker.io/kafka-microservices/notification-service:latest done', '#15 DONE 5.6s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/notification-service:latest'
2025-06-22 10:54:04,506 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 541B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 0.9s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.74MB 1.1s done\n#5 DONE 1.1s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 9.8s\n\n#12 [ 8/10] RUN npx nx build logger-service --prod\n#12 14.16 \n#12 14.16 > nx run logger-service:build\n#12 14.16 \n#12 14.17 > webpack-cli build node-env=production\r\n#12 14.17 \r\n#12 15.59 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.99 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 15.59 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (9c84d89542177468)\n#12 15.61 \n#12 15.61 \n#12 15.61 \n#12 15.61  NX   Successfully ran target build for project logger-service\n#12 15.61 \n#12 15.61 \n#12 15.69 View logs and investigate cache misses at https://nx.app/runs/EHvuaFslmj\n#12 15.69 \n#12 DONE 16.2s\n\n#13 [ 9/10] WORKDIR /app/apps/logger-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.2s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 5.3s done\n#15 writing image sha256:0e5f90ef5348e344b1619a26f1e6ab501a2c0eb8e7a2da8517808fde063d95f3 done\n#15 naming to docker.io/kafka-microservices/logger-service:latest done\n#15 DONE 5.3s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/logger-service/Dockerfile -t kafka-microservices/logger-service:latest .\n', 'start': '2025-06-22 10:53:30.004662', 'end': '2025-06-22 10:54:04.451216', 'delta': '0:00:34.446554', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/logger-service/Dockerfile -t kafka-microservices/logger-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 541B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 0.9s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.74MB 1.1s done', '#5 DONE 1.1s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 9.8s', '', '#12 [ 8/10] RUN npx nx build logger-service --prod', '#12 14.16 ', '#12 14.16 > nx run logger-service:build', '#12 14.16 ', '#12 14.17 > webpack-cli build node-env=production', '#12 14.17 ', '#12 15.59 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.99 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 15.59 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (9c84d89542177468)', '#12 15.61 ', '#12 15.61 ', '#12 15.61 ', '#12 15.61  NX   Successfully ran target build for project logger-service', '#12 15.61 ', '#12 15.61 ', '#12 15.69 View logs and investigate cache misses at https://nx.app/runs/EHvuaFslmj', '#12 15.69 ', '#12 DONE 16.2s', '', '#13 [ 9/10] WORKDIR /app/apps/logger-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.2s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 5.3s done', '#15 writing image sha256:0e5f90ef5348e344b1619a26f1e6ab501a2c0eb8e7a2da8517808fde063d95f3 done', '#15 naming to docker.io/kafka-microservices/logger-service:latest done', '#15 DONE 5.3s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/logger-service:latest'
2025-06-22 10:54:04,508 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy infrastructure] ************************************************************************************************************************************************
2025-06-22 10:54:04,517 p=86091 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-infrastructure.yml for localhost
2025-06-22 10:54:04,518 p=86091 u=trannhatsang n=ansible INFO| TASK [Create namespace] *****************************************************************************************************************************************************
2025-06-22 10:54:05,289 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:54:05,290 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy ConfigMap] *****************************************************************************************************************************************************
2025-06-22 10:54:05,516 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:54:05,517 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy Secrets] *******************************************************************************************************************************************************
2025-06-22 10:54:05,754 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:54:05,755 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy PostgreSQL PVC] ************************************************************************************************************************************************
2025-06-22 10:54:06,014 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:54:06,016 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy PostgreSQL] ****************************************************************************************************************************************************
2025-06-22 10:54:06,257 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:54:06,259 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy PostgreSQL Service] ********************************************************************************************************************************************
2025-06-22 10:54:06,548 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:54:06,549 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy Zookeeper and Kafka] *******************************************************************************************************************************************
2025-06-22 10:54:06,557 p=86091 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-kafka.yml for localhost
2025-06-22 10:54:06,559 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy Zookeeper] *****************************************************************************************************************************************************
2025-06-22 10:54:06,822 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:54:06,823 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy Zookeeper Service] *********************************************************************************************************************************************
2025-06-22 10:54:07,102 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:54:07,103 p=86091 u=trannhatsang n=ansible INFO| TASK [Wait for Zookeeper to be ready] ***************************************************************************************************************************************
2025-06-22 10:54:47,120 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:54:47,123 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy Kafka] *********************************************************************************************************************************************************
2025-06-22 10:54:47,412 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:54:47,413 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy Kafka Service] *************************************************************************************************************************************************
2025-06-22 10:54:47,672 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:54:47,673 p=86091 u=trannhatsang n=ansible INFO| TASK [Wait for Kafka to be ready] *******************************************************************************************************************************************
2025-06-22 10:54:58,122 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:54:58,124 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy microservices] *************************************************************************************************************************************************
2025-06-22 10:54:58,135 p=86091 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-microservices.yml for localhost
2025-06-22 10:54:58,137 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy microservices] *************************************************************************************************************************************************
2025-06-22 10:54:58,461 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 10:54:58,719 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 10:54:59,098 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 10:54:59,508 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 10:54:59,510 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy microservice services] *****************************************************************************************************************************************
2025-06-22 10:55:00,300 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 10:55:00,908 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 10:55:01,497 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 10:55:02,097 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 10:55:02,099 p=86091 u=trannhatsang n=ansible INFO| TASK [Wait for microservices to be ready] ***********************************************************************************************************************************
2025-06-22 10:55:02,503 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 10:55:02,896 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 10:55:03,202 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 10:55:04,103 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 10:55:04,106 p=86091 u=trannhatsang n=ansible INFO| TASK [Setup monitoring] *****************************************************************************************************************************************************
2025-06-22 10:55:04,116 p=86091 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-monitoring.yml for localhost
2025-06-22 10:55:04,119 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy Kafka UI] ******************************************************************************************************************************************************
2025-06-22 10:55:04,507 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:55:04,508 p=86091 u=trannhatsang n=ansible INFO| TASK [Deploy Kafka UI Service] **********************************************************************************************************************************************
2025-06-22 10:55:05,013 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:55:05,014 p=86091 u=trannhatsang n=ansible INFO| TASK [Verify deployment] ****************************************************************************************************************************************************
2025-06-22 10:55:05,023 p=86091 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/verify-deployment.yml for localhost
2025-06-22 10:55:05,026 p=86091 u=trannhatsang n=ansible INFO| TASK [Get all pods status] **************************************************************************************************************************************************
2025-06-22 10:55:05,311 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:55:05,312 p=86091 u=trannhatsang n=ansible INFO| TASK [Display pods status] **************************************************************************************************************************************************
2025-06-22 10:55:05,320 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => 
  msg:
  - NAME                                    READY   STATUS              RESTARTS   AGE
  - kafka-67c59c9bbf-d5rlr                  1/1     Running             0          18s
  - kafka-ui-7bf56b5c7c-kd4z7               0/1     ContainerCreating   0          1s
  - logger-service-d46f97f5b-c5zfd          1/1     Running             0          6s
  - notification-service-68cd8556d5-265xn   1/1     Running             0          6s
  - order-gateway-fd7885c9f-4rlgr           1/1     Running             0          7s
  - order-gateway-fd7885c9f-rkt89           1/1     Running             0          7s
  - order-service-5f7698fdb-54lt7           1/1     Running             0          7s
  - order-service-5f7698fdb-hlls5           1/1     Running             0          7s
  - postgres-78c679f78c-g5qlz               1/1     Running             0          59s
  - zookeeper-5c664f7f5-6vqzx               1/1     Running             0          59s
2025-06-22 10:55:05,321 p=86091 u=trannhatsang n=ansible INFO| TASK [Get all services] *****************************************************************************************************************************************************
2025-06-22 10:55:05,601 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:55:05,602 p=86091 u=trannhatsang n=ansible INFO| TASK [Display services status] **********************************************************************************************************************************************
2025-06-22 10:55:05,610 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => 
  msg:
  - NAME                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE
  - kafka-service                  ClusterIP   10.104.136.185   <none>        9092/TCP,29092/TCP   18s
  - kafka-ui-service               NodePort    10.111.176.168   <none>        8080:30823/TCP       1s
  - logger-service-service         ClusterIP   10.109.116.107   <none>        3000/TCP             4s
  - notification-service-service   ClusterIP   10.109.40.142    <none>        3000/TCP             4s
  - order-gateway-service          NodePort    10.105.20.236    <none>        3000:32413/TCP       6s
  - order-service-service          ClusterIP   10.105.98.43     <none>        3000/TCP             5s
  - postgres-service               ClusterIP   10.106.128.61    <none>        5432/TCP             59s
  - zookeeper-service              ClusterIP   10.108.122.93    <none>        2181/TCP             58s
2025-06-22 10:55:05,611 p=86091 u=trannhatsang n=ansible INFO| TASK [Get Order Gateway NodePort] *******************************************************************************************************************************************
2025-06-22 10:55:05,894 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:55:05,895 p=86091 u=trannhatsang n=ansible INFO| TASK [Get Kafka UI NodePort] ************************************************************************************************************************************************
2025-06-22 10:55:06,198 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 10:55:06,199 p=86091 u=trannhatsang n=ansible INFO| TASK [Display access URLs] **************************************************************************************************************************************************
2025-06-22 10:55:06,209 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => 
  msg:
  - "\U0001F680 Your services are deployed!"
  - "\U0001F4F1 Order Gateway API: http://192.168.49.2:32413/api"
  - "\U0001F50D Kafka UI: http://192.168.49.2:30823"
  - "\U0001F4CA Test the API with: curl http://192.168.49.2:32413/api"
2025-06-22 10:55:06,209 p=86091 u=trannhatsang n=ansible INFO| TASK [Display access information] *******************************************************************************************************************************************
2025-06-22 10:55:06,218 p=86091 u=trannhatsang n=ansible INFO| ok: [localhost] => 
  msg:
  - "\U0001F680 Deployment completed successfully!"
  - "\U0001F4F1 Application URL: http://192.168.49.2"
  - "\U0001F4CA Add to /etc/hosts: 192.168.49.2 kafka-microservices.local"
  - "\U0001F50D Kafka UI: Available via NodePort"
  - "\U0001F4CB Dashboard: Run 'minikube dashboard'"
2025-06-22 10:55:06,218 p=86091 u=trannhatsang n=ansible INFO| PLAY RECAP ******************************************************************************************************************************************************************
2025-06-22 10:55:06,218 p=86091 u=trannhatsang n=ansible INFO| localhost                  : ok=40   changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2025-06-22 11:27:24,330 p=26161 u=trannhatsang n=ansible INFO| PLAY [Deploy Kafka Microservices to Kubernetes] ************************************************************************************************************************
2025-06-22 11:27:24,336 p=26161 u=trannhatsang n=ansible WARNING| [WARNING]: Found variable using reserved name: environment

2025-06-22 11:27:24,336 p=26161 u=trannhatsang n=ansible INFO| TASK [Check if Docker is running] **************************************************************************************************************************************
2025-06-22 11:27:24,848 p=26161 u=trannhatsang n=ansible WARNING| [WARNING]: Platform darwin on host localhost is using the discovered Python interpreter at /opt/homebrew/bin/python3.13, but future installation of another Python
interpreter could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.18/reference_appendices/interpreter_discovery.html for more information.

2025-06-22 11:27:24,848 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:27:24,850 p=26161 u=trannhatsang n=ansible INFO| TASK [Fail if Docker is not running] ***********************************************************************************************************************************
2025-06-22 11:27:24,857 p=26161 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 11:27:24,857 p=26161 u=trannhatsang n=ansible INFO| TASK [Check if Minikube is running] ************************************************************************************************************************************
2025-06-22 11:27:25,437 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:27:25,438 p=26161 u=trannhatsang n=ansible INFO| TASK [Start Minikube if not running] ***********************************************************************************************************************************
2025-06-22 11:27:25,446 p=26161 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 11:27:25,447 p=26161 u=trannhatsang n=ansible INFO| TASK [Wait for Minikube to be ready] ***********************************************************************************************************************************
2025-06-22 11:27:25,669 p=26161 u=trannhatsang n=ansible INFO| changed: [localhost]
2025-06-22 11:27:25,671 p=26161 u=trannhatsang n=ansible INFO| TASK [Get Minikube IP] *************************************************************************************************************************************************
2025-06-22 11:27:26,060 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:27:26,063 p=26161 u=trannhatsang n=ansible INFO| TASK [Set Minikube IP fact] ********************************************************************************************************************************************
2025-06-22 11:27:26,072 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:27:26,074 p=26161 u=trannhatsang n=ansible INFO| TASK [Configure Docker environment for Minikube] ***********************************************************************************************************************
2025-06-22 11:27:26,633 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:27:26,634 p=26161 u=trannhatsang n=ansible INFO| TASK [Build Docker images] *********************************************************************************************************************************************
2025-06-22 11:27:26,644 p=26161 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/build-images.yml for localhost
2025-06-22 11:27:26,645 p=26161 u=trannhatsang n=ansible INFO| TASK [Set Docker environment for Minikube] *****************************************************************************************************************************
2025-06-22 11:27:27,201 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:27:27,202 p=26161 u=trannhatsang n=ansible INFO| TASK [Build Docker images for each service] ****************************************************************************************************************************
2025-06-22 11:28:17,004 p=26161 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 11:29:01,137 p=26161 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 11:29:35,524 p=26161 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 11:30:23,753 p=26161 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 11:30:23,759 p=26161 u=trannhatsang n=ansible INFO| TASK [Display build results] *******************************************************************************************************************************************
2025-06-22 11:30:23,780 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 551B 0.0s done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 2.0s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 7.81MB 1.5s done\n#5 DONE 1.6s\n\n#6 [ 5/10] COPY nx.json ./\n#6 CACHED\n\n#7 [ 2/10] WORKDIR /app\n#7 CACHED\n\n#8 [ 3/10] COPY package*.json ./\n#8 CACHED\n\n#9 [ 4/10] COPY tsconfig.base.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 14.9s\n\n#12 [ 8/10] RUN npx nx build order-gateway --prod\n#12 21.35 \n#12 21.35 > nx run order-gateway:build\n#12 21.35 \n#12 21.36 > webpack-cli build node-env=production\r\n#12 21.36 \r\n#12 23.08 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 10.9 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 23.08 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (0f426e000636ce0c)\n#12 23.10 \n#12 23.10 \n#12 23.10 \n#12 23.10  NX   Successfully ran target build for project order-gateway\n#12 23.10 \n#12 23.10 \n#12 23.25 View logs and investigate cache misses at https://nx.app/runs/dlknSkQbLK\n#12 23.25 \n#12 DONE 24.5s\n\n#13 [ 9/10] WORKDIR /app/apps/order-gateway/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.3s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 5.4s done\n#15 writing image sha256:714067f5379d3f2deb8d6699a475798993200523e74b8e92ed969af968733b1c done\n#15 naming to docker.io/kafka-microservices/order-gateway:latest done\n#15 DONE 5.4s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/order-gateway/Dockerfile -t kafka-microservices/order-gateway:latest .\n', 'start': '2025-06-22 11:27:27.352202', 'end': '2025-06-22 11:28:16.972457', 'delta': '0:00:49.620255', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/order-gateway/Dockerfile -t kafka-microservices/order-gateway:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 551B 0.0s done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 2.0s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 7.81MB 1.5s done', '#5 DONE 1.6s', '', '#6 [ 5/10] COPY nx.json ./', '#6 CACHED', '', '#7 [ 2/10] WORKDIR /app', '#7 CACHED', '', '#8 [ 3/10] COPY package*.json ./', '#8 CACHED', '', '#9 [ 4/10] COPY tsconfig.base.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 14.9s', '', '#12 [ 8/10] RUN npx nx build order-gateway --prod', '#12 21.35 ', '#12 21.35 > nx run order-gateway:build', '#12 21.35 ', '#12 21.36 > webpack-cli build node-env=production', '#12 21.36 ', '#12 23.08 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 10.9 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 23.08 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (0f426e000636ce0c)', '#12 23.10 ', '#12 23.10 ', '#12 23.10 ', '#12 23.10  NX   Successfully ran target build for project order-gateway', '#12 23.10 ', '#12 23.10 ', '#12 23.25 View logs and investigate cache misses at https://nx.app/runs/dlknSkQbLK', '#12 23.25 ', '#12 DONE 24.5s', '', '#13 [ 9/10] WORKDIR /app/apps/order-gateway/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.3s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 5.4s done', '#15 writing image sha256:714067f5379d3f2deb8d6699a475798993200523e74b8e92ed969af968733b1c done', '#15 naming to docker.io/kafka-microservices/order-gateway:latest done', '#15 DONE 5.4s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/order-gateway:latest'
2025-06-22 11:30:23,781 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 538B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 1.0s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.78MB 1.1s done\n#5 DONE 1.1s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 13.6s\n\n#12 [ 8/10] RUN npx nx build order-service --prod\n#12 15.31 \n#12 15.31 > nx run order-service:build\n#12 15.31 \n#12 15.31 > webpack-cli build node-env=production\r\n#12 15.31 \r\n#12 17.82 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 12.6 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 17.82 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (6906b1d92314730b)\n#12 17.89 \n#12 17.89 \n#12 17.89 \n#12 17.89  NX   Successfully ran target build for project order-service\n#12 17.89 \n#12 17.89 \n#12 19.82 View logs and investigate cache misses at https://nx.app/runs/Q7vOFppFAg\n#12 19.82 \n#12 DONE 21.0s\n\n#13 [ 9/10] WORKDIR /app/apps/order-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.3s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 6.0s done\n#15 writing image sha256:03de3788b8051ac6cb4a8b86422fe73c700f31f84511ccf27f1eb50d44000195 done\n#15 naming to docker.io/kafka-microservices/order-service:latest done\n#15 DONE 6.0s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/order-service/Dockerfile -t kafka-microservices/order-service:latest .\n', 'start': '2025-06-22 11:28:17.177339', 'end': '2025-06-22 11:29:01.106763', 'delta': '0:00:43.929424', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/order-service/Dockerfile -t kafka-microservices/order-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 538B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 1.0s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.78MB 1.1s done', '#5 DONE 1.1s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 13.6s', '', '#12 [ 8/10] RUN npx nx build order-service --prod', '#12 15.31 ', '#12 15.31 > nx run order-service:build', '#12 15.31 ', '#12 15.31 > webpack-cli build node-env=production', '#12 15.31 ', '#12 17.82 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 12.6 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 17.82 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (6906b1d92314730b)', '#12 17.89 ', '#12 17.89 ', '#12 17.89 ', '#12 17.89  NX   Successfully ran target build for project order-service', '#12 17.89 ', '#12 17.89 ', '#12 19.82 View logs and investigate cache misses at https://nx.app/runs/Q7vOFppFAg', '#12 19.82 ', '#12 DONE 21.0s', '', '#13 [ 9/10] WORKDIR /app/apps/order-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.3s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 6.0s done', '#15 writing image sha256:03de3788b8051ac6cb4a8b86422fe73c700f31f84511ccf27f1eb50d44000195 done', '#15 naming to docker.io/kafka-microservices/order-service:latest done', '#15 DONE 6.0s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/order-service:latest'
2025-06-22 11:30:23,783 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 559B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 0.9s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B 0.0s done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.78MB 1.3s done\n#5 DONE 1.3s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 10.2s\n\n#12 [ 8/10] RUN npx nx build notification-service --prod\n#12 12.64 \n#12 12.64 > nx run notification-service:build\n#12 12.64 \n#12 12.65 > webpack-cli build node-env=production\r\n#12 12.65 \r\n#12 14.41 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.39 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 14.41 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (1cb087d9bf173a6b)\n#12 14.43 \n#12 14.43 \n#12 14.43 \n#12 14.43  NX   Successfully ran target build for project notification-service\n#12 14.43 \n#12 14.43 \n#12 14.53 View logs and investigate cache misses at https://nx.app/runs/XviIrDEB1e\n#12 14.53 \n#12 DONE 15.1s\n\n#13 [ 9/10] WORKDIR /app/apps/notification-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.2s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 5.5s done\n#15 writing image sha256:f8227b045360c4033cf70122fb84b75b2830c2ea7ddc4d3e86809932a344b07b done\n#15 naming to docker.io/kafka-microservices/notification-service:latest done\n#15 DONE 5.5s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/notification-service/Dockerfile -t kafka-microservices/notification-service:latest .\n', 'start': '2025-06-22 11:29:01.318097', 'end': '2025-06-22 11:29:35.495955', 'delta': '0:00:34.177858', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/notification-service/Dockerfile -t kafka-microservices/notification-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 559B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 0.9s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B 0.0s done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.78MB 1.3s done', '#5 DONE 1.3s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 10.2s', '', '#12 [ 8/10] RUN npx nx build notification-service --prod', '#12 12.64 ', '#12 12.64 > nx run notification-service:build', '#12 12.64 ', '#12 12.65 > webpack-cli build node-env=production', '#12 12.65 ', '#12 14.41 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.39 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 14.41 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (1cb087d9bf173a6b)', '#12 14.43 ', '#12 14.43 ', '#12 14.43 ', '#12 14.43  NX   Successfully ran target build for project notification-service', '#12 14.43 ', '#12 14.43 ', '#12 14.53 View logs and investigate cache misses at https://nx.app/runs/XviIrDEB1e', '#12 14.53 ', '#12 DONE 15.1s', '', '#13 [ 9/10] WORKDIR /app/apps/notification-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.2s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 5.5s done', '#15 writing image sha256:f8227b045360c4033cf70122fb84b75b2830c2ea7ddc4d3e86809932a344b07b done', '#15 naming to docker.io/kafka-microservices/notification-service:latest done', '#15 DONE 5.5s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/notification-service:latest'
2025-06-22 11:30:23,786 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 541B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 1.0s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.78MB 1.4s done\n#5 DONE 1.4s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 17.4s\n\n#12 [ 8/10] RUN npx nx build logger-service --prod\n#12 17.57 \n#12 17.57 > nx run logger-service:build\n#12 17.57 \n#12 17.57 > webpack-cli build node-env=production\r\n#12 17.57 \r\n#12 19.28 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 7.03 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 19.28 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (dcb30d42d690d161)\n#12 19.34 \n#12 19.34 \n#12 19.34 \n#12 19.34  NX   Successfully ran target build for project logger-service\n#12 19.34 \n#12 19.34 \n#12 19.50 View logs and investigate cache misses at https://nx.app/runs/94qbtb3sbf\n#12 19.50 \n#12 DONE 20.4s\n\n#13 [ 9/10] WORKDIR /app/apps/logger-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.3s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 6.7s done\n#15 writing image sha256:ace21a8f54aba6a7228886c0a2557d31675759e8d7a284641bd96b45391ce8f8 done\n#15 naming to docker.io/kafka-microservices/logger-service:latest done\n#15 DONE 6.7s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/logger-service/Dockerfile -t kafka-microservices/logger-service:latest .\n', 'start': '2025-06-22 11:29:35.712050', 'end': '2025-06-22 11:30:23.724551', 'delta': '0:00:48.012501', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/logger-service/Dockerfile -t kafka-microservices/logger-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 541B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 1.0s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.78MB 1.4s done', '#5 DONE 1.4s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 17.4s', '', '#12 [ 8/10] RUN npx nx build logger-service --prod', '#12 17.57 ', '#12 17.57 > nx run logger-service:build', '#12 17.57 ', '#12 17.57 > webpack-cli build node-env=production', '#12 17.57 ', '#12 19.28 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 7.03 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 19.28 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (dcb30d42d690d161)', '#12 19.34 ', '#12 19.34 ', '#12 19.34 ', '#12 19.34  NX   Successfully ran target build for project logger-service', '#12 19.34 ', '#12 19.34 ', '#12 19.50 View logs and investigate cache misses at https://nx.app/runs/94qbtb3sbf', '#12 19.50 ', '#12 DONE 20.4s', '', '#13 [ 9/10] WORKDIR /app/apps/logger-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.3s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 6.7s done', '#15 writing image sha256:ace21a8f54aba6a7228886c0a2557d31675759e8d7a284641bd96b45391ce8f8 done', '#15 naming to docker.io/kafka-microservices/logger-service:latest done', '#15 DONE 6.7s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/logger-service:latest'
2025-06-22 11:30:23,789 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy infrastructure] *******************************************************************************************************************************************
2025-06-22 11:30:23,799 p=26161 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-infrastructure.yml for localhost
2025-06-22 11:30:23,801 p=26161 u=trannhatsang n=ansible INFO| TASK [Create namespace] ************************************************************************************************************************************************
2025-06-22 11:30:24,279 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:24,280 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy ConfigMap] ************************************************************************************************************************************************
2025-06-22 11:30:24,578 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:24,580 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy Secrets] **************************************************************************************************************************************************
2025-06-22 11:30:24,896 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:24,898 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy PostgreSQL PVC] *******************************************************************************************************************************************
2025-06-22 11:30:25,276 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:25,278 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy PostgreSQL] ***********************************************************************************************************************************************
2025-06-22 11:30:25,654 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:25,656 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy PostgreSQL Service] ***************************************************************************************************************************************
2025-06-22 11:30:26,583 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:26,586 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy Zookeeper and Kafka] **************************************************************************************************************************************
2025-06-22 11:30:26,606 p=26161 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-kafka.yml for localhost
2025-06-22 11:30:26,610 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy Zookeeper] ************************************************************************************************************************************************
2025-06-22 11:30:27,071 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:27,072 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy Zookeeper Service] ****************************************************************************************************************************************
2025-06-22 11:30:27,543 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:27,545 p=26161 u=trannhatsang n=ansible INFO| TASK [Wait for Zookeeper to be ready] **********************************************************************************************************************************
2025-06-22 11:30:28,442 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:28,444 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy Kafka] ****************************************************************************************************************************************************
2025-06-22 11:30:28,805 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:28,807 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy Kafka Service] ********************************************************************************************************************************************
2025-06-22 11:30:29,246 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:29,248 p=26161 u=trannhatsang n=ansible INFO| TASK [Wait for Kafka to be ready] **************************************************************************************************************************************
2025-06-22 11:30:30,509 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:30,511 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy microservices] ********************************************************************************************************************************************
2025-06-22 11:30:30,521 p=26161 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-microservices.yml for localhost
2025-06-22 11:30:30,524 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy microservices] ********************************************************************************************************************************************
2025-06-22 11:30:30,974 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 11:30:31,378 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 11:30:31,953 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 11:30:32,453 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 11:30:32,456 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy microservice services] ************************************************************************************************************************************
2025-06-22 11:30:33,324 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 11:30:34,144 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 11:30:34,854 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 11:30:35,550 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 11:30:35,552 p=26161 u=trannhatsang n=ansible INFO| TASK [Wait for microservices to be ready] ******************************************************************************************************************************
2025-06-22 11:30:36,455 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 11:30:38,151 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 11:30:38,546 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 11:30:38,949 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 11:30:38,952 p=26161 u=trannhatsang n=ansible INFO| TASK [Setup monitoring] ************************************************************************************************************************************************
2025-06-22 11:30:38,960 p=26161 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-monitoring.yml for localhost
2025-06-22 11:30:38,963 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy Kafka UI] *************************************************************************************************************************************************
2025-06-22 11:30:39,442 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:39,444 p=26161 u=trannhatsang n=ansible INFO| TASK [Deploy Kafka UI Service] *****************************************************************************************************************************************
2025-06-22 11:30:40,148 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:40,149 p=26161 u=trannhatsang n=ansible INFO| TASK [Verify deployment] ***********************************************************************************************************************************************
2025-06-22 11:30:40,158 p=26161 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/verify-deployment.yml for localhost
2025-06-22 11:30:40,162 p=26161 u=trannhatsang n=ansible INFO| TASK [Get all pods status] *********************************************************************************************************************************************
2025-06-22 11:30:40,556 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:40,557 p=26161 u=trannhatsang n=ansible INFO| TASK [Display pods status] *********************************************************************************************************************************************
2025-06-22 11:30:40,567 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => 
  msg:
  - NAME                                    READY   STATUS              RESTARTS   AGE
  - kafka-67c59c9bbf-2vsht                  1/1     Running             0          12s
  - kafka-ui-7bf56b5c7c-jl4vf               0/1     ContainerCreating   0          1s
  - logger-service-d46f97f5b-h5k6g          1/1     Running             0          8s
  - notification-service-68cd8556d5-m4x6m   1/1     Running             0          9s
  - order-gateway-fd7885c9f-4fcbn           1/1     Running             0          10s
  - order-gateway-fd7885c9f-gbfnz           1/1     Running             0          9s
  - order-service-5f7698fdb-ls9dd           1/1     Running             0          9s
  - order-service-5f7698fdb-tbjnb           1/1     Running             0          9s
  - postgres-78c679f78c-c5ntb               1/1     Running             0          15s
  - zookeeper-5c664f7f5-bf2cx               1/1     Running             0          13s
2025-06-22 11:30:40,568 p=26161 u=trannhatsang n=ansible INFO| TASK [Get all services] ************************************************************************************************************************************************
2025-06-22 11:30:40,966 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:40,967 p=26161 u=trannhatsang n=ansible INFO| TASK [Display services status] *****************************************************************************************************************************************
2025-06-22 11:30:40,980 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => 
  msg:
  - NAME                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE
  - kafka-service                  ClusterIP   10.97.196.62     <none>        9092/TCP,29092/TCP   11s
  - kafka-ui-service               NodePort    10.96.87.24      <none>        8080:32460/TCP       1s
  - logger-service-service         ClusterIP   10.101.111.133   <none>        3000/TCP             5s
  - notification-service-service   ClusterIP   10.99.12.19      <none>        3000/TCP             6s
  - order-gateway-service          NodePort    10.107.59.161    <none>        3000:31318/TCP       7s
  - order-service-service          ClusterIP   10.98.140.208    <none>        3000/TCP             7s
  - postgres-service               ClusterIP   10.103.64.18     <none>        5432/TCP             15s
  - zookeeper-service              ClusterIP   10.103.164.177   <none>        2181/TCP             13s
2025-06-22 11:30:40,982 p=26161 u=trannhatsang n=ansible INFO| TASK [Get Order Gateway NodePort] **************************************************************************************************************************************
2025-06-22 11:30:41,447 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:41,448 p=26161 u=trannhatsang n=ansible INFO| TASK [Get Kafka UI NodePort] *******************************************************************************************************************************************
2025-06-22 11:30:41,751 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 11:30:41,752 p=26161 u=trannhatsang n=ansible INFO| TASK [Display access URLs] *********************************************************************************************************************************************
2025-06-22 11:30:41,763 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => 
  msg:
  - "\U0001F680 Your services are deployed!"
  - "\U0001F4F1 Order Gateway API: http://192.168.49.2:31318/api"
  - "\U0001F50D Kafka UI: http://192.168.49.2:32460"
  - "\U0001F4CA Test the API with: curl http://192.168.49.2:31318/api"
2025-06-22 11:30:41,764 p=26161 u=trannhatsang n=ansible INFO| TASK [Display access information] **************************************************************************************************************************************
2025-06-22 11:30:41,774 p=26161 u=trannhatsang n=ansible INFO| ok: [localhost] => 
  msg:
  - "\U0001F680 Deployment completed successfully!"
  - "\U0001F4F1 Application URL: http://192.168.49.2"
  - "\U0001F4CA Add to /etc/hosts: 192.168.49.2 kafka-microservices.local"
  - "\U0001F50D Kafka UI: Available via NodePort"
  - "\U0001F4CB Dashboard: Run 'minikube dashboard'"
2025-06-22 11:30:41,775 p=26161 u=trannhatsang n=ansible INFO| PLAY RECAP *************************************************************************************************************************************************************
2025-06-22 11:30:41,775 p=26161 u=trannhatsang n=ansible INFO| localhost                  : ok=40   changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2025-06-22 17:06:49,141 p=8977 u=trannhatsang n=ansible INFO| PLAY [Deploy Kafka Microservices to Kubernetes] ****************************************************************************************************************
2025-06-22 17:06:49,147 p=8977 u=trannhatsang n=ansible WARNING| [WARNING]: Found variable using reserved name: environment

2025-06-22 17:06:49,147 p=8977 u=trannhatsang n=ansible INFO| TASK [Check if Docker is running] ******************************************************************************************************************************
2025-06-22 17:06:49,630 p=8977 u=trannhatsang n=ansible WARNING| [WARNING]: Platform darwin on host localhost is using the discovered Python interpreter at /opt/homebrew/bin/python3.13, but future installation of another
Python interpreter could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.18/reference_appendices/interpreter_discovery.html for
more information.

2025-06-22 17:06:49,630 p=8977 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:06:49,632 p=8977 u=trannhatsang n=ansible INFO| TASK [Fail if Docker is not running] ***************************************************************************************************************************
2025-06-22 17:06:49,638 p=8977 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 17:06:49,638 p=8977 u=trannhatsang n=ansible INFO| TASK [Check if Minikube is running] ****************************************************************************************************************************
2025-06-22 17:06:50,278 p=8977 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:06:50,279 p=8977 u=trannhatsang n=ansible INFO| TASK [Start Minikube if not running] ***************************************************************************************************************************
2025-06-22 17:06:50,285 p=8977 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 17:06:50,286 p=8977 u=trannhatsang n=ansible INFO| TASK [Wait for Minikube to be ready] ***************************************************************************************************************************
2025-06-22 17:06:50,528 p=8977 u=trannhatsang n=ansible INFO| FAILED - RETRYING: [localhost]: Wait for Minikube to be ready (10 retries left).
2025-06-22 17:06:55,697 p=8977 u=trannhatsang n=ansible INFO| FAILED - RETRYING: [localhost]: Wait for Minikube to be ready (9 retries left).
2025-06-22 17:07:00,881 p=8977 u=trannhatsang n=ansible INFO| FAILED - RETRYING: [localhost]: Wait for Minikube to be ready (8 retries left).
2025-06-22 17:07:06,055 p=8977 u=trannhatsang n=ansible INFO| FAILED - RETRYING: [localhost]: Wait for Minikube to be ready (7 retries left).
2025-06-22 17:07:11,255 p=8977 u=trannhatsang n=ansible INFO| FAILED - RETRYING: [localhost]: Wait for Minikube to be ready (6 retries left).
2025-06-22 17:07:16,436 p=8977 u=trannhatsang n=ansible INFO| FAILED - RETRYING: [localhost]: Wait for Minikube to be ready (5 retries left).
2025-06-22 17:08:11,836 p=8977 u=trannhatsang n=ansible INFO| FAILED - RETRYING: [localhost]: Wait for Minikube to be ready (4 retries left).
2025-06-22 17:08:40,942 p=8977 u=trannhatsang n=ansible ERROR|  [ERROR]: User interrupted execution

2025-06-22 17:08:56,628 p=11973 u=trannhatsang n=ansible INFO| PLAY [Deploy Kafka Microservices to Kubernetes] ****************************************************************************************************************
2025-06-22 17:08:56,633 p=11973 u=trannhatsang n=ansible WARNING| [WARNING]: Found variable using reserved name: environment

2025-06-22 17:08:56,633 p=11973 u=trannhatsang n=ansible INFO| TASK [Check if Docker is running] ******************************************************************************************************************************
2025-06-22 17:08:57,049 p=11973 u=trannhatsang n=ansible WARNING| [WARNING]: Platform darwin on host localhost is using the discovered Python interpreter at /opt/homebrew/bin/python3.13, but future installation of another
Python interpreter could change the meaning of that path. See https://docs.ansible.com/ansible-core/2.18/reference_appendices/interpreter_discovery.html for
more information.

2025-06-22 17:08:57,049 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:08:57,050 p=11973 u=trannhatsang n=ansible INFO| TASK [Fail if Docker is not running] ***************************************************************************************************************************
2025-06-22 17:08:57,057 p=11973 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 17:08:57,058 p=11973 u=trannhatsang n=ansible INFO| TASK [Check if Minikube is running] ****************************************************************************************************************************
2025-06-22 17:08:57,603 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:08:57,604 p=11973 u=trannhatsang n=ansible INFO| TASK [Start Minikube if not running] ***************************************************************************************************************************
2025-06-22 17:08:57,609 p=11973 u=trannhatsang n=ansible INFO| skipping: [localhost]
2025-06-22 17:08:57,610 p=11973 u=trannhatsang n=ansible INFO| TASK [Wait for Minikube to be ready] ***************************************************************************************************************************
2025-06-22 17:09:29,858 p=11973 u=trannhatsang n=ansible INFO| changed: [localhost]
2025-06-22 17:09:29,898 p=11973 u=trannhatsang n=ansible INFO| TASK [Get Minikube IP] *****************************************************************************************************************************************
2025-06-22 17:09:30,483 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:09:30,485 p=11973 u=trannhatsang n=ansible INFO| TASK [Set Minikube IP fact] ************************************************************************************************************************************
2025-06-22 17:09:30,498 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:09:30,501 p=11973 u=trannhatsang n=ansible INFO| TASK [Configure Docker environment for Minikube] ***************************************************************************************************************
2025-06-22 17:09:32,557 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:09:32,559 p=11973 u=trannhatsang n=ansible INFO| TASK [Build Docker images] *************************************************************************************************************************************
2025-06-22 17:09:32,567 p=11973 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/build-images.yml for localhost
2025-06-22 17:09:32,568 p=11973 u=trannhatsang n=ansible INFO| TASK [Set Docker environment for Minikube] *********************************************************************************************************************
2025-06-22 17:09:33,849 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:09:33,851 p=11973 u=trannhatsang n=ansible INFO| TASK [Build Docker images for each service] ********************************************************************************************************************
2025-06-22 17:10:56,097 p=11973 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 17:11:38,781 p=11973 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 17:12:15,521 p=11973 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 17:12:55,565 p=11973 u=trannhatsang n=ansible INFO| changed: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 17:12:55,572 p=11973 u=trannhatsang n=ansible INFO| TASK [Display build results] ***********************************************************************************************************************************
2025-06-22 17:12:55,602 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 DONE 0.0s\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile:\n#1 transferring dockerfile: 551B 0.1s done\n#1 DONE 0.4s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 2.8s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 4.45MB 2.0s\n#5 transferring context: 11.85MB 7.1s\n#5 transferring context: 13.50MB 10.2s done\n#5 DONE 13.5s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 39.9s\n\n#12 [ 8/10] RUN npx nx build order-gateway --prod\n#12 12.29 \n#12 12.29 > nx run order-gateway:build\n#12 12.29 \n#12 12.29 > webpack-cli build node-env=production\r\n#12 12.29 \r\n#12 13.82 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 10.9 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 13.82 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (0f426e000636ce0c)\n#12 13.84 \n#12 13.84 \n#12 13.84 \n#12 13.84  NX   Successfully ran target build for project order-gateway\n#12 13.84 \n#12 13.84 \n#12 13.92 View logs and investigate cache misses at https://nx.app/runs/SzwieRCWE5\n#12 13.92 \n#12 DONE 14.6s\n\n#13 [ 9/10] WORKDIR /app/apps/order-gateway/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.3s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 6.2s done\n#15 writing image sha256:80a5a6e255eee75fbfc2d2e878a130b465dfd211acfca224951c788b68232025 done\n#15 naming to docker.io/kafka-microservices/order-gateway:latest done\n#15 DONE 6.2s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/order-gateway/Dockerfile -t kafka-microservices/order-gateway:latest .\n', 'start': '2025-06-22 17:09:34.040366', 'end': '2025-06-22 17:10:56.068589', 'delta': '0:01:22.028223', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/order-gateway/Dockerfile -t kafka-microservices/order-gateway:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 DONE 0.0s', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile:', '#1 transferring dockerfile: 551B 0.1s done', '#1 DONE 0.4s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 2.8s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 4.45MB 2.0s', '#5 transferring context: 11.85MB 7.1s', '#5 transferring context: 13.50MB 10.2s done', '#5 DONE 13.5s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 39.9s', '', '#12 [ 8/10] RUN npx nx build order-gateway --prod', '#12 12.29 ', '#12 12.29 > nx run order-gateway:build', '#12 12.29 ', '#12 12.29 > webpack-cli build node-env=production', '#12 12.29 ', '#12 13.82 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 10.9 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 13.82 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (0f426e000636ce0c)', '#12 13.84 ', '#12 13.84 ', '#12 13.84 ', '#12 13.84  NX   Successfully ran target build for project order-gateway', '#12 13.84 ', '#12 13.84 ', '#12 13.92 View logs and investigate cache misses at https://nx.app/runs/SzwieRCWE5', '#12 13.92 ', '#12 DONE 14.6s', '', '#13 [ 9/10] WORKDIR /app/apps/order-gateway/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.3s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 6.2s done', '#15 writing image sha256:80a5a6e255eee75fbfc2d2e878a130b465dfd211acfca224951c788b68232025 done', '#15 naming to docker.io/kafka-microservices/order-gateway:latest done', '#15 DONE 6.2s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/order-gateway:latest'
2025-06-22 17:12:55,606 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 538B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 1.0s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.83MB 1.5s done\n#5 DONE 1.6s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 14.3s\n\n#12 [ 8/10] RUN npx nx build order-service --prod\n#12 14.37 \n#12 14.37 > nx run order-service:build\n#12 14.37 \n#12 14.37 > webpack-cli build node-env=production\r\n#12 14.37 \r\n#12 16.48 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 12.6 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 16.48 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (6906b1d92314730b)\n#12 16.53 \n#12 16.53 \n#12 16.53 \n#12 16.53  NX   Successfully ran target build for project order-service\n#12 16.53 \n#12 16.53 \n#12 16.65 View logs and investigate cache misses at https://nx.app/runs/RUwTReStw2\n#12 16.65 \n#12 DONE 17.6s\n\n#13 [ 9/10] WORKDIR /app/apps/order-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.3s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 6.7s done\n#15 writing image sha256:36f3bd911ab8c08c484b40202f4364ca49f6c2ee2d1a33f3d7fbd9d4739bff9f done\n#15 naming to docker.io/kafka-microservices/order-service:latest done\n#15 DONE 6.8s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/order-service/Dockerfile -t kafka-microservices/order-service:latest .\n', 'start': '2025-06-22 17:10:56.252634', 'end': '2025-06-22 17:11:38.753183', 'delta': '0:00:42.500549', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/order-service/Dockerfile -t kafka-microservices/order-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 538B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 1.0s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.83MB 1.5s done', '#5 DONE 1.6s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 14.3s', '', '#12 [ 8/10] RUN npx nx build order-service --prod', '#12 14.37 ', '#12 14.37 > nx run order-service:build', '#12 14.37 ', '#12 14.37 > webpack-cli build node-env=production', '#12 14.37 ', '#12 16.48 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 12.6 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 16.48 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (6906b1d92314730b)', '#12 16.53 ', '#12 16.53 ', '#12 16.53 ', '#12 16.53  NX   Successfully ran target build for project order-service', '#12 16.53 ', '#12 16.53 ', '#12 16.65 View logs and investigate cache misses at https://nx.app/runs/RUwTReStw2', '#12 16.65 ', '#12 DONE 17.6s', '', '#13 [ 9/10] WORKDIR /app/apps/order-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.3s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 6.7s done', '#15 writing image sha256:36f3bd911ab8c08c484b40202f4364ca49f6c2ee2d1a33f3d7fbd9d4739bff9f done', '#15 naming to docker.io/kafka-microservices/order-service:latest done', '#15 DONE 6.8s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/order-service:latest'
2025-06-22 17:12:55,612 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 559B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 0.9s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.83MB 1.6s done\n#5 DONE 1.7s\n\n#6 [ 3/10] COPY package*.json ./\n#6 CACHED\n\n#7 [ 4/10] COPY tsconfig.base.json ./\n#7 CACHED\n\n#8 [ 5/10] COPY nx.json ./\n#8 CACHED\n\n#9 [ 2/10] WORKDIR /app\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 11.3s\n\n#12 [ 8/10] RUN npx nx build notification-service --prod\n#12 11.63 \n#12 11.63 > nx run notification-service:build\n#12 11.63 \n#12 11.63 > webpack-cli build node-env=production\r\n#12 11.63 \r\n#12 13.73 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.39 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 13.73 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (1cb087d9bf173a6b)\n#12 13.76 \n#12 13.76 \n#12 13.76 \n#12 13.76  NX   Successfully ran target build for project notification-service\n#12 13.76 \n#12 13.76 \n#12 13.87 View logs and investigate cache misses at https://nx.app/runs/7eBRqSaG3m\n#12 13.87 \n#12 DONE 14.7s\n\n#13 [ 9/10] WORKDIR /app/apps/notification-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.2s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 6.3s done\n#15 writing image sha256:5363500b18420992625270058ed6ae779db60ba8277d437c8c49f893491deb1f done\n#15 naming to docker.io/kafka-microservices/notification-service:latest done\n#15 DONE 6.3s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/notification-service/Dockerfile -t kafka-microservices/notification-service:latest .\n', 'start': '2025-06-22 17:11:38.975000', 'end': '2025-06-22 17:12:15.475351', 'delta': '0:00:36.500351', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/notification-service/Dockerfile -t kafka-microservices/notification-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 559B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 0.9s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.83MB 1.6s done', '#5 DONE 1.7s', '', '#6 [ 3/10] COPY package*.json ./', '#6 CACHED', '', '#7 [ 4/10] COPY tsconfig.base.json ./', '#7 CACHED', '', '#8 [ 5/10] COPY nx.json ./', '#8 CACHED', '', '#9 [ 2/10] WORKDIR /app', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 11.3s', '', '#12 [ 8/10] RUN npx nx build notification-service --prod', '#12 11.63 ', '#12 11.63 > nx run notification-service:build', '#12 11.63 ', '#12 11.63 > webpack-cli build node-env=production', '#12 11.63 ', '#12 13.73 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 6.39 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 13.73 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (1cb087d9bf173a6b)', '#12 13.76 ', '#12 13.76 ', '#12 13.76 ', '#12 13.76  NX   Successfully ran target build for project notification-service', '#12 13.76 ', '#12 13.76 ', '#12 13.87 View logs and investigate cache misses at https://nx.app/runs/7eBRqSaG3m', '#12 13.87 ', '#12 DONE 14.7s', '', '#13 [ 9/10] WORKDIR /app/apps/notification-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.2s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 6.3s done', '#15 writing image sha256:5363500b18420992625270058ed6ae779db60ba8277d437c8c49f893491deb1f done', '#15 naming to docker.io/kafka-microservices/notification-service:latest done', '#15 DONE 6.3s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/notification-service:latest'
2025-06-22 17:12:55,613 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'changed': True, 'stdout': '', 'stderr': '#0 building with "default" instance using docker driver\n\n#1 [internal] load build definition from dockerfile\n#1 transferring dockerfile: 541B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20-alpine\n#2 DONE 1.0s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.83MB 1.6s done\n#5 DONE 1.6s\n\n#6 [ 2/10] WORKDIR /app\n#6 CACHED\n\n#7 [ 3/10] COPY package*.json ./\n#7 CACHED\n\n#8 [ 4/10] COPY tsconfig.base.json ./\n#8 CACHED\n\n#9 [ 5/10] COPY nx.json ./\n#9 CACHED\n\n#10 [ 6/10] RUN npm install\n#10 CACHED\n\n#11 [ 7/10] COPY . .\n#11 DONE 14.1s\n\n#12 [ 8/10] RUN npx nx build logger-service --prod\n#12 12.28 \n#12 12.28 > nx run logger-service:build\n#12 12.28 \n#12 12.28 > webpack-cli build node-env=production\r\n#12 12.28 \r\n#12 14.09 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 7.03 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m\n#12 14.09 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (dcb30d42d690d161)\n#12 14.11 \n#12 14.11 \n#12 14.11 \n#12 14.11  NX   Successfully ran target build for project logger-service\n#12 14.11 \n#12 14.11 \n#12 14.20 View logs and investigate cache misses at https://nx.app/runs/RYy5x5ZhaY\n#12 14.20 \n#12 DONE 14.9s\n\n#13 [ 9/10] WORKDIR /app/apps/logger-service/dist\n#13 DONE 0.0s\n\n#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx\n#14 DONE 0.3s\n\n#15 exporting to image\n#15 exporting layers\n#15 exporting layers 6.7s done\n#15 writing image sha256:9bdd170f7793efb06092fbc3be2b78fad6bfa842d42c2ee1d37fcc7d20f43035 done\n#15 naming to docker.io/kafka-microservices/logger-service:latest done\n#15 DONE 6.7s\n\nWhat\'s Next?\n  1. Sign in to your Docker account → docker login\n  2. View a summary of image vulnerabilities and recommendations → docker scout quickview', 'rc': 0, 'cmd': 'eval $(minikube docker-env)\ndocker build -f apps/logger-service/Dockerfile -t kafka-microservices/logger-service:latest .\n', 'start': '2025-06-22 17:12:15.748223', 'end': '2025-06-22 17:12:55.539212', 'delta': '0:00:39.790989', 'msg': '', 'invocation': {'module_args': {'chdir': '/Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/..', '_raw_params': 'eval $(minikube docker-env)\ndocker build -f apps/logger-service/Dockerfile -t kafka-microservices/logger-service:latest .\n', '_uses_shell': True, 'expand_argument_vars': True, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': [], 'stderr_lines': ['#0 building with "default" instance using docker driver', '', '#1 [internal] load build definition from dockerfile', '#1 transferring dockerfile: 541B done', '#1 DONE 0.0s', '', '#2 [internal] load metadata for docker.io/library/node:20-alpine', '#2 DONE 1.0s', '', '#3 [internal] load .dockerignore', '#3 transferring context: 2B done', '#3 DONE 0.0s', '', '#4 [ 1/10] FROM docker.io/library/node:20-alpine@sha256:d3507a213936fe4ef54760a186e113db5188472d9efdf491686bd94580a1c1e8', '#4 DONE 0.0s', '', '#5 [internal] load build context', '#5 transferring context: 3.83MB 1.6s done', '#5 DONE 1.6s', '', '#6 [ 2/10] WORKDIR /app', '#6 CACHED', '', '#7 [ 3/10] COPY package*.json ./', '#7 CACHED', '', '#8 [ 4/10] COPY tsconfig.base.json ./', '#8 CACHED', '', '#9 [ 5/10] COPY nx.json ./', '#9 CACHED', '', '#10 [ 6/10] RUN npm install', '#10 CACHED', '', '#11 [ 7/10] COPY . .', '#11 DONE 14.1s', '', '#12 [ 8/10] RUN npx nx build logger-service --prod', '#12 12.28 ', '#12 12.28 > nx run logger-service:build', '#12 12.28 ', '#12 12.28 > webpack-cli build node-env=production', '#12 12.28 ', '#12 14.09 chunk (runtime: main) \x1b[1m\x1b[32mmain.js\x1b[39m\x1b[22m (main) 7.03 KiB \x1b[1m\x1b[33m[entry]\x1b[39m\x1b[22m \x1b[1m\x1b[32m[rendered]\x1b[39m\x1b[22m', '#12 14.09 webpack compiled \x1b[1m\x1b[32msuccessfully\x1b[39m\x1b[22m (dcb30d42d690d161)', '#12 14.11 ', '#12 14.11 ', '#12 14.11 ', '#12 14.11  NX   Successfully ran target build for project logger-service', '#12 14.11 ', '#12 14.11 ', '#12 14.20 View logs and investigate cache misses at https://nx.app/runs/RYy5x5ZhaY', '#12 14.20 ', '#12 DONE 14.9s', '', '#13 [ 9/10] WORKDIR /app/apps/logger-service/dist', '#13 DONE 0.0s', '', '#14 [10/10] RUN rm -rf /app/node_modules/.cache /app/.nx', '#14 DONE 0.3s', '', '#15 exporting to image', '#15 exporting layers', '#15 exporting layers 6.7s done', '#15 writing image sha256:9bdd170f7793efb06092fbc3be2b78fad6bfa842d42c2ee1d37fcc7d20f43035 done', '#15 naming to docker.io/kafka-microservices/logger-service:latest done', '#15 DONE 6.7s', '', "What's Next?", '  1. Sign in to your Docker account → docker login', '  2. View a summary of image vulnerabilities and recommendations → docker scout quickview'], 'failed': False, 'item': {'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1}, 'ansible_loop_var': 'item'}) => 
  msg: 'Built image: kafka-microservices/logger-service:latest'
2025-06-22 17:12:55,616 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy infrastructure] ***********************************************************************************************************************************
2025-06-22 17:12:55,636 p=11973 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-infrastructure.yml for localhost
2025-06-22 17:12:55,638 p=11973 u=trannhatsang n=ansible INFO| TASK [Create namespace] ****************************************************************************************************************************************
2025-06-22 17:12:56,595 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:12:56,596 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy ConfigMap] ****************************************************************************************************************************************
2025-06-22 17:12:56,888 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:12:56,889 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy Secrets] ******************************************************************************************************************************************
2025-06-22 17:12:57,261 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:12:57,262 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy PostgreSQL PVC] ***********************************************************************************************************************************
2025-06-22 17:12:57,533 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:12:57,535 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy PostgreSQL] ***************************************************************************************************************************************
2025-06-22 17:12:57,796 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:12:57,797 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy PostgreSQL Service] *******************************************************************************************************************************
2025-06-22 17:12:58,055 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:12:58,056 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy Zookeeper and Kafka] ******************************************************************************************************************************
2025-06-22 17:12:58,065 p=11973 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-kafka.yml for localhost
2025-06-22 17:12:58,067 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy Zookeeper] ****************************************************************************************************************************************
2025-06-22 17:12:58,347 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:12:58,349 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy Zookeeper Service] ********************************************************************************************************************************
2025-06-22 17:12:58,599 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:12:58,600 p=11973 u=trannhatsang n=ansible INFO| TASK [Wait for Zookeeper to be ready] **************************************************************************************************************************
2025-06-22 17:12:58,911 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:12:58,912 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy Kafka] ********************************************************************************************************************************************
2025-06-22 17:12:59,186 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:12:59,187 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy Kafka Service] ************************************************************************************************************************************
2025-06-22 17:12:59,449 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:12:59,450 p=11973 u=trannhatsang n=ansible INFO| TASK [Wait for Kafka to be ready] ******************************************************************************************************************************
2025-06-22 17:12:59,765 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:12:59,766 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy microservices] ************************************************************************************************************************************
2025-06-22 17:12:59,775 p=11973 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-microservices.yml for localhost
2025-06-22 17:12:59,777 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy microservices] ************************************************************************************************************************************
2025-06-22 17:13:00,098 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 17:13:00,376 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 17:13:00,654 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 17:13:00,897 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 17:13:00,899 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy microservice services] ****************************************************************************************************************************
2025-06-22 17:13:01,172 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 17:13:01,498 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 17:13:01,767 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 17:13:02,021 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 17:13:02,024 p=11973 u=trannhatsang n=ansible INFO| TASK [Wait for microservices to be ready] **********************************************************************************************************************
2025-06-22 17:13:02,370 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-gateway', 'image': 'kafka-microservices/order-gateway:latest', 'port': 3000, 'replicas': 2})
2025-06-22 17:13:02,686 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'order-service', 'image': 'kafka-microservices/order-service:latest', 'replicas': 2})
2025-06-22 17:13:02,997 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'notification-service', 'image': 'kafka-microservices/notification-service:latest', 'replicas': 1})
2025-06-22 17:13:03,316 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => (item={'name': 'logger-service', 'image': 'kafka-microservices/logger-service:latest', 'replicas': 1})
2025-06-22 17:13:03,318 p=11973 u=trannhatsang n=ansible INFO| TASK [Setup monitoring] ****************************************************************************************************************************************
2025-06-22 17:13:03,329 p=11973 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/deploy-monitoring.yml for localhost
2025-06-22 17:13:03,332 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy Kafka UI] *****************************************************************************************************************************************
2025-06-22 17:13:03,704 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:13:03,705 p=11973 u=trannhatsang n=ansible INFO| TASK [Deploy Kafka UI Service] *********************************************************************************************************************************
2025-06-22 17:13:03,971 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:13:03,972 p=11973 u=trannhatsang n=ansible INFO| TASK [Verify deployment] ***************************************************************************************************************************************
2025-06-22 17:13:03,982 p=11973 u=trannhatsang n=ansible INFO| included: /Users/trannhatsang/Documents/Programming/Kafka/kafka-microservices/ansible/tasks/verify-deployment.yml for localhost
2025-06-22 17:13:03,985 p=11973 u=trannhatsang n=ansible INFO| TASK [Get all pods status] *************************************************************************************************************************************
2025-06-22 17:13:04,207 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:13:04,209 p=11973 u=trannhatsang n=ansible INFO| TASK [Display pods status] *************************************************************************************************************************************
2025-06-22 17:13:04,219 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => 
  msg:
  - NAME                                    READY   STATUS    RESTARTS        AGE
  - kafka-67c59c9bbf-2vsht                  1/1     Running   1 (6m51s ago)   5h42m
  - kafka-ui-7bf56b5c7c-jl4vf               1/1     Running   1 (6m51s ago)   5h42m
  - logger-service-d46f97f5b-h5k6g          1/1     Running   4 (2m51s ago)   5h42m
  - notification-service-68cd8556d5-m4x6m   1/1     Running   4 (2m51s ago)   5h42m
  - order-gateway-fd7885c9f-r42np           1/1     Running   1 (6m51s ago)   5h12m
  - order-gateway-fd7885c9f-t4rvc           1/1     Running   1 (6m51s ago)   5h12m
  - order-service-5f7698fdb-ls9dd           1/1     Running   3 (6m51s ago)   5h42m
  - order-service-5f7698fdb-tbjnb           1/1     Running   3 (6m51s ago)   5h42m
  - postgres-78c679f78c-c5ntb               1/1     Running   1 (6m51s ago)   5h42m
  - zookeeper-5c664f7f5-bf2cx               1/1     Running   1 (6m51s ago)   5h42m
2025-06-22 17:13:04,220 p=11973 u=trannhatsang n=ansible INFO| TASK [Get all services] ****************************************************************************************************************************************
2025-06-22 17:13:04,456 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:13:04,458 p=11973 u=trannhatsang n=ansible INFO| TASK [Display services status] *********************************************************************************************************************************
2025-06-22 17:13:04,467 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => 
  msg:
  - NAME                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE
  - kafka-service                  ClusterIP   10.97.196.62     <none>        9092/TCP,29092/TCP   5h42m
  - kafka-ui-service               NodePort    10.96.87.24      <none>        8080:32460/TCP       5h42m
  - logger-service-service         ClusterIP   10.101.111.133   <none>        3000/TCP             5h42m
  - notification-service-service   ClusterIP   10.99.12.19      <none>        3000/TCP             5h42m
  - order-gateway-service          NodePort    10.107.59.161    <none>        3000:31318/TCP       5h42m
  - order-service-service          ClusterIP   10.98.140.208    <none>        3000/TCP             5h42m
  - postgres-service               ClusterIP   10.103.64.18     <none>        5432/TCP             5h42m
  - zookeeper-service              ClusterIP   10.103.164.177   <none>        2181/TCP             5h42m
2025-06-22 17:13:04,469 p=11973 u=trannhatsang n=ansible INFO| TASK [Get Order Gateway NodePort] ******************************************************************************************************************************
2025-06-22 17:13:04,678 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:13:04,680 p=11973 u=trannhatsang n=ansible INFO| TASK [Get Kafka UI NodePort] ***********************************************************************************************************************************
2025-06-22 17:13:04,890 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost]
2025-06-22 17:13:04,891 p=11973 u=trannhatsang n=ansible INFO| TASK [Display access URLs] *************************************************************************************************************************************
2025-06-22 17:13:04,901 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => 
  msg:
  - "\U0001F680 Your services are deployed!"
  - "\U0001F4F1 Order Gateway API: http://192.168.49.2:31318/api"
  - "\U0001F50D Kafka UI: http://192.168.49.2:32460"
  - "\U0001F4CA Test the API with: curl http://192.168.49.2:31318/api"
2025-06-22 17:13:04,903 p=11973 u=trannhatsang n=ansible INFO| TASK [Display access information] ******************************************************************************************************************************
2025-06-22 17:13:04,911 p=11973 u=trannhatsang n=ansible INFO| ok: [localhost] => 
  msg:
  - "\U0001F680 Deployment completed successfully!"
  - "\U0001F4F1 Application URL: http://192.168.49.2"
  - "\U0001F4CA Add to /etc/hosts: 192.168.49.2 kafka-microservices.local"
  - "\U0001F50D Kafka UI: Available via NodePort"
  - "\U0001F4CB Dashboard: Run 'minikube dashboard'"
2025-06-22 17:13:04,911 p=11973 u=trannhatsang n=ansible INFO| PLAY RECAP *****************************************************************************************************************************************************
2025-06-22 17:13:04,912 p=11973 u=trannhatsang n=ansible INFO| localhost                  : ok=40   changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
