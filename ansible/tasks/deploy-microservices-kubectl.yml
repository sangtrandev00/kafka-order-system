- name: Deploy microservices using kubectl
  shell: |
    cat <<EOF | kubectl apply -f -
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: {{ item.name }}
      namespace: {{ k8s_namespace }}
    spec:
      replicas: {{ item.replicas }}
      selector:
        matchLabels:
          app: {{ item.name }}
      template:
        metadata:
          labels:
            app: {{ item.name }}
        spec:
          containers:
            - name: {{ item.name }}
              image: {{ item.image }}
              imagePullPolicy: Never
              ports:
                - containerPort: {{ item.port | default(3000) }}
              env:
                - name: DB_HOST
                  value: postgres-service
                - name: DB_PORT
                  value: "5432"
                - name: DB_USERNAME
                  value: postgres
                - name: DB_PASSWORD
                  value: postgres
                - name: DB_NAME
                  value: orders_db
                - name: KAFKA_BROKERS
                  value: kafka-service:9092
              resources:
                requests:
                  memory: "{{ item.name == 'order-gateway' and '256Mi' or '128Mi' }}"
                  cpu: "{{ item.name == 'order-gateway' and '250m' or '125m' }}"
                limits:
                  memory: "{{ item.name == 'order-gateway' and '512Mi' or '256Mi' }}"
                  cpu: "{{ item.name == 'order-gateway' and '500m' or '250m' }}"
    EOF
  loop: '{{ app_services }}'
  changed_when: false

- name: Deploy microservice services using kubectl
  shell: |
    cat <<EOF | kubectl apply -f -
    apiVersion: v1
    kind: Service
    metadata:
      name: {{ item.name }}-service
      namespace: {{ k8s_namespace }}
    spec:
      selector:
        app: {{ item.name }}
      ports:
        - protocol: TCP
          port: {{ item.port | default(3000) }}
          targetPort: {{ item.port | default(3000) }}
      type: "{{ item.name == 'order-gateway' and 'NodePort' or 'ClusterIP' }}"
    EOF
  loop: '{{ app_services }}'
  changed_when: false

- name: Wait for microservices to be ready
  shell: |
    kubectl wait --for=condition=available --timeout=300s deployment/{{ item.name }} -n {{ k8s_namespace }}
  loop: '{{ app_services }}'
  changed_when: false
