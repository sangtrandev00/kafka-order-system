---
- name: Create namespace
  shell: kubectl create namespace {{ k8s_namespace }} --dry-run=client -o yaml | kubectl apply -f -
  changed_when: false

- name: Deploy ConfigMap
  shell: |
    kubectl create configmap app-config \
      --namespace={{ k8s_namespace }} \
      --from-literal=DB_HOST=postgres-service \
      --from-literal=DB_PORT=5432 \
      --from-literal=DB_USERNAME=postgres \
      --from-literal=DB_NAME=orders_db \
      --from-literal=KAFKA_BROKERS=kafka-service:9092 \
      --from-literal=KAFKA_CLIENT_ID=kafka-microservices \
      --dry-run=client -o yaml | kubectl apply -f -
  changed_when: false

- name: Deploy Secrets
  shell: |
    kubectl create secret generic app-secrets \
      --namespace={{ k8s_namespace }} \
      --from-literal=DB_PASSWORD=postgres \
      --dry-run=client -o yaml | kubectl apply -f -
  changed_when: false

- name: Deploy PostgreSQL PVC
  shell: |
    cat <<EOF | kubectl apply -f -
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: postgres-pvc
      namespace: {{ k8s_namespace }}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
    EOF
  changed_when: false

- name: Deploy PostgreSQL
  shell: |
    cat <<EOF | kubectl apply -f -
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: postgres
      namespace: {{ k8s_namespace }}
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: postgres
      template:
        metadata:
          labels:
            app: postgres
        spec:
          containers:
            - name: postgres
              image: postgres:13
              ports:
                - containerPort: 5432
              env:
                - name: POSTGRES_USER
                  value: postgres
                - name: POSTGRES_PASSWORD
                  value: postgres
                - name: POSTGRES_DB
                  value: orders_db
              volumeMounts:
                - name: postgres-storage
                  mountPath: /var/lib/postgresql/data
              resources:
                requests:
                  memory: 256Mi
                  cpu: 250m
                limits:
                  memory: 512Mi
                  cpu: 500m
          volumes:
            - name: postgres-storage
              persistentVolumeClaim:
                claimName: postgres-pvc
    EOF
  changed_when: false

- name: Deploy PostgreSQL Service
  shell: |
    cat <<EOF | kubectl apply -f -
    apiVersion: v1
    kind: Service
    metadata:
      name: postgres-service
      namespace: {{ k8s_namespace }}
    spec:
      selector:
        app: postgres
      ports:
        - protocol: TCP
          port: 5432
          targetPort: 5432
      type: ClusterIP
    EOF
  changed_when: false

- name: Deploy Zookeeper and Kafka
  include_tasks: deploy-kafka.yml
