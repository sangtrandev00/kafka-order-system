networks:
  kafka-network:
    driver: bridge
  signoz-net:
    external: true # Use SigNoz's network

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    networks:
      - kafka-network
      - signoz-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    networks:
      - kafka-network
      - signoz-net
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
    healthcheck:
      test:
        [
          'CMD',
          'kafka-topics',
          '--bootstrap-server',
          'localhost:9092',
          '--list',
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:13
    networks:
      - kafka-network
      - signoz-net
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: orders_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    networks:
      - kafka-network
      - signoz-net
    ports:
      - '8082:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_PROVECTUS: DEBUG
    restart: unless-stopped

  # MongoDB for file metadata and saga state
  mongodb:
    image: mongo:7.0
    networks:
      - kafka-network
      - signoz-net
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: kafka_microservices
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db

  # LocalStack for S3 simulation (development only)
  localstack:
    image: localstack/localstack:latest
    networks:
      - kafka-network
      - signoz-net
    ports:
      - '4566:4566' # LocalStack edge port
      - '4571:4571' # LocalStack web UI
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/var/lib/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=us-east-1
      - PERSISTENCE=1
    volumes:
      - localstack_data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock

  # MongoDB Express for database management (optional)
  mongo-express:
    image: mongo-express:latest
    networks:
      - kafka-network
      - signoz-net
    restart: always
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin123@mongodb:27017/
    depends_on:
      - mongodb

# FIXED: Added missing localstack_data volume
volumes:
  postgres_data:
  mongodb_data:
  localstack_data:
